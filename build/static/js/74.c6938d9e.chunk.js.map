{"version":3,"sources":["pages/Provider/All/ProviderAll.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Datatable/SearchForm.component.js","ui/Datatable/Datatable.style.js","ui/Datatable/Datatable.component.js","ui/Datatable/index.js"],"names":["ProviderAll","className","to","type","columns","key","title","dataIndex","cell","searchable","search_key","sorter","a","b","name","length","owner_email","url","actions","Component","connect","LayoutContentStyle","styled","div","palette","reduxForm","form","props","onChangeHandler","Field","component","CustomInput","placeholder","validate","onChange","event","target","value","DatatableStyleWrapper","WithDirection","Datatable","state","data","per_page","last_page","loading","total_pages","current_page","active_data","show_actions","query","get","end_point","async","getStorage","token","fetch","method","headers","handleSearch","filter","column","map","join","response","json","reset","detectQueryString","RegExp","test","fetchData","page_number","setState","request","tableData","table","index","id","push","meta","total","getPaginated","selected","row","console","log","JSON","stringify","action","classes","onClick","handle","customswal","content","buttons","delete","param","status","newData","swal","history","tableList","icon","aria-hidden","is_selected","col","container","colSpan","Fragment","this","pageNumbers","i","Math","ceil","searchForm","renderPageNumbers","number","hideSearch","onRow","record","rowIndex","dataSource","pagination","React","defaultProps","withRouter"],"mappings":"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","file":"static/js/74.c6938d9e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../../containers/Dashboard/Dashboard';\nimport Datatable from '../../../ui/Datatable';\nimport Loader from '../../../ui/Loader/Loader.Component';\nimport {FaPlus} from 'react-icons/fa';\n\nclass ProviderAll extends Component {\n    render() {\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4>Providers</h4>\n                                </div>\n                                <div className=\"col-md-6 text-right\">\n                                    <Link to=\"/dashboard/provider_add\">\n                                        <button type=\"button\" className=\"btn btn-sm btn-success\">\n                                            <FaPlus />{\" \"}\n                                            Add Provider\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div><hr/>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                <Datatable\n                                        columns={[\n                                            {\n                                                key: 'id',\n                                                title: 'ID',\n                                                dataIndex: 'id',\n                                                cell: 'Default',\n                                                searchable: false,\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: true,\n                                                key: 'name',\n                                                title: 'Name',\n                                                dataIndex: 'name',\n                                                search_key: 'name',\n                                                sorter: (a,b) => a.name.length - b.name.length\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                key: 'code',\n                                                dataIndex: 'code',\n                                                searchable: false,\n                                                title: 'Code',\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: false,\n                                                key: 'category',\n                                                title: 'Category',\n                                                dataIndex: 'category'\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: false,\n                                                key: 'company_type',\n                                                title: 'Type',\n                                                dataIndex: 'company_type'\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: true,\n                                                key: 'warden',\n                                                title: 'Ward',\n                                                search_key: 'warden',\n                                                dataIndex: 'warden'\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: true,\n                                                key: 'local_government',\n                                                title: 'LGA',\n                                                search_key: 'local_government',\n                                                dataIndex: 'local_government'\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: false,\n                                                key: 'owner_email',\n                                                dataIndex: 'owner_email',\n                                                title: 'Email',\n                                                sorter: (a,b) => a.owner_email.length - b.owner_email.length\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: false,\n                                                key: 'owner_phone_number',\n                                                dataIndex: 'owner_phone_number',\n                                                title: 'Phone',\n                                            },\n                                            {\n                                                key: 'is_active',\n                                                dataIndex: 'is_active',\n                                                title: 'Status',\n                                                cell: 'Default',\n                                                searchable: false,\n                                            },\n                                        ]}\n                                        url={`organization_profile/index/2`}\n                                        actions={[\n                                            // {\n                                            //     key: 'slug',\n                                            //     type: 'delete',\n                                            //     title: 'Delete',\n                                            //     url: 'organization_profile/delete/'\n                                            // },\n                                            // {\n                                            //     key: 'slug',\n                                            //     type: 'view',\n                                            //     title: 'VIEW ENROLLEES',\n                                            //     url: '/provider_all-beneficiary_'\n                                            // },\n\n                                            {\n                                                key: 'slug',\n                                                type: 'view',\n                                                title: 'VIEW',\n                                                url: '/dashboard/provider_view/'\n                                            },\n                                        ]}\n                                    />\n                                </div>\n                            </div>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        );\n    }\n}\n\nexport default connect(null)(ProviderAll);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","import React from 'react';\nimport CustomInput from '../CustomInput';\nimport { Field, reduxForm } from 'redux-form';\n// import { requiredValidator } from '../../../shared/utils/validation';\n\n\nconst SearchForm = props => {\n\n    const { onChangeHandler } = props\n\n    const onNameChanged = event => {\n        onChangeHandler(event.target.value);\n    }\n\n    return (\n        <form>\n            <Field\n                name=\"value\"\n                component={CustomInput}\n                type=\"text\"\n                placeholder=\"Search\"\n                validate={[]}\n                onChange={onNameChanged}\n            />\n        </form>\n    )\n\n}\n\nexport default reduxForm({\n    form: 'SearchForm'\n})(SearchForm);","import styled from 'styled-components';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst DatatableStyleWrapper = styled.div`\n  \n  .pagination {\n    margin-top: 25px !important;\n  }\n\n  .pagination span {\n    cursor: pointer;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n  }\n\n  .pagination span.active {\n    background-color: #15974b;\n    color: white;\n    border: 1px solid #15974b;\n  }\n\n.center {\n  text-align: center;\n}\n.actions {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n}\n.actions2 {\n  width: 50%;\n  margin: 15px auto;\n}\n\n.action {\n    opacity: 1;\n    display: block;\n    font-size: 12px;\n    cursor: pointer;\n    padding: 10px 10px;\n\n    color: #FFFFFF;\n    border-radius: 5px;\n    letter-spacing: 0.29px;\n    transition: all 0.3s ease 0s;\n    border: 1px solid transparent;\n\n    margin-bottom: 15px;\n}\n.delete {\n  opacity: .8;\n  background: #e43829;\n}\n.edit {\n  opacity: .8;\n  background: #ffca28;\n}\n.view {\n  opacity: .8;\n  background: #15974b;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 5px 5px;\n  /* background: #eceeef; */\n  margin-bottom: 15px;\n}\n.field,\n.comparison {\n  width: 14%;\n}\n.form {\n  width: 30%;\n}\n.filter {\n  width: 10%;\n}\n.button {\n  width: 100%;\n  display: block;\n  background: #eceeef;\n  padding: 5px 5px;\n  border-radius: 5px;\n  text-align: center;\n  margin-top: 7px;\n}\n\n`;\n\nexport default WithDirection(DatatableStyleWrapper);\n","import React from 'react';\nimport swal from 'sweetalert';\nimport { Table, Tag } from 'antd';\n// import Filter from './Filter.component';\nimport { withRouter } from 'react-router-dom';\nimport SearchForm from './SearchForm.component';\nimport customswal from '@sweetalert/with-react';\nimport { getStorage } from '../../shared/utils/storage';\nimport { url } from './../../config';\n\nimport DatatableStyleWrapper from './Datatable.style';\n\nclass Datatable extends React.Component {\n\n    state = {\n        data: [],\n        per_page: 20,\n        last_page: 0,\n        loading: true,\n        total_pages: 0,\n        current_page: 0,\n        active_data: null,\n        show_actions: false,\n        query: ''\n    };\n\n    get = async end_point => {\n        let token = await getStorage('ohis:auth_token');\n\n        return fetch(url + end_point, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"AuthorizationHeader\": \"Bearer OSUN_1234567890987654321\",\n                'AuthToken': token\n            },\n        });\n    }\n\n    handleSearch = async value => {\n        let searchable = this.props.columns.filter(column => column.searchable).map(column => column.search_key).join(\"*\");\n        let query = `${searchable}:${value}`;\n\n        let response = await this.get(`${this.props.url}?search=${query}`);\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    detectQueryString = (url) => {\n        // get the current URL\n\n        // regex pattern for detecting ? character\n        var pattern = new RegExp(/\\?.+=.*/g);\n\n        return pattern.test(url);\n    }\n\n    fetchData = async (url, page_number) => {\n        let request;\n        this.setState({ loading: true });\n        if (this.detectQueryString(url)) request = this.get(`${url}&page=${page_number}`);\n        else request = this.get(`${url}?page=${page_number}`);\n        //make http request\n        let response = await request;\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    reset = data => {\n        let newData, total_pages, last_page, current_page;\n        let tableData = [];\n        \n        if (data.data) {\n            newData = data.data.map(data => {\n                data['is_selected'] = false;\n                return data;\n            });\n            newData.map((table,index) => {\n                table['key'] = table.id\n                tableData.push(table);\n            });\n            total_pages = data.meta.total;\n            last_page = data.meta.last_page;\n            current_page = data.meta.current_page;\n        } else {\n            newData = [];\n            total_pages = 0;\n            last_page = 0;\n            current_page = 0;\n        }\n\n        this.setState({\n            data: tableData,\n            loading: false,\n            total_pages: total_pages,\n            last_page: last_page,\n            current_page: current_page\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData(this.props.url, 1);\n    }\n\n    getPaginated = page_number => {\n        this.fetchData(this.props.url, page_number);\n    }\n\n    selected = row => {\n        console.log(JSON.stringify(row));\n        let tableData = [];\n        let newData = this.state.data.map(data => {\n            data['is_selected'] = false;\n\n            if (row.id === data.id) {\n                data['is_selected'] = true;\n            }\n\n            return data;\n        });\n\n        newData.map((table,index) => {\n            table['key'] = table.id\n            tableData.push(table);\n        });\n\n        this.setState({\n            data: tableData,\n            active_data: row,\n            show_actions: true\n        }, async () => {\n            if (this.props.actions.length) {\n                let actions = this.props.actions.map((action, index) => {\n\n                    let classes = `action delete`;\n\n                    if (action.type === 'edit') {\n                        classes = `action edit`;\n                    }\n\n                    if (action.type === 'view') {\n                        classes = `action view`;\n                    }\n\n\n                    return (\n                        <div key={index} className={classes} onClick={() => this.handle(action)}>\n                            {action.title}\n                        </div>\n                    )\n                });\n\n                customswal({\n                    content: (\n                        <div>\n                            <h1>Action List(s)</h1>\n                            <div className=\"actions2\">\n                                {actions}\n                            </div>\n                        </div>\n                    ),\n                    buttons: false,\n                });\n            }\n        });\n    }\n\n    delete = async (key, url) => {\n        //set is deleting status on the particular table\n        // let newData = data.data.map(data => {\n        //     data['is_selected'] = false;\n        //     return data;\n        // });\n        // this.setState({\n        //     data: newData,\n        // });\n\n        let param = this.state.active_data[key];\n\n        let response = await this.get(`${url}${param}`);\n        const data = await response.json();\n\n\n        if (data.status === 200) {\n            let newData = [...this.state.data].filter(data => {\n                return param !== data[key]\n            });\n\n            this.setState({\n                data: newData,\n            });\n        }\n    }\n\n    handle = async ({ type, url, key }) => {\n        let alert = await swal({\n            title: `Are you sure you want to ${type}`,\n            type: 'warning',\n            buttons: [\n                'No',\n                'Yes, I am sure!'\n            ],\n        });\n        if (alert) {\n            if (type === 'delete') {\n                this.delete(key, url);\n            }\n            //edit\n            if (type === 'edit') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n            if (type === 'view') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n        }\n    }\n\n    tableList = () => {\n        let values = [];\n\n        if (this.state.data.length) {\n            return this.state.data.map(row => {\n                let icon = <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n\n                if (row.is_selected) {\n                    icon = <i className=\"fa fa-circle\" aria-hidden=\"true\"></i>\n                }\n\n                return (\n                    <tr key={row.id} onClick={() => this.selected(row)}>\n                        <td>{icon}</td>\n                        {this.props.columns.map(col =>\n                            <td key={col.key}>\n                                {row[col.key]}\n                            </td>\n                        )}\n                    </tr>\n                )\n            });\n        }\n\n        let container = (\n            <tr>\n                <td colSpan={this.props.columns.length + 1} className=\"center\">No Records Found.</td>\n            </tr>\n        )\n\n        if (this.state.loading) {\n            container = (\n                <tr>\n                    <td colSpan={this.props.columns.length + 1} className=\"center\">Slow network, Loading...</td>\n                </tr>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                {container}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(this.state.total_pages / this.state.per_page); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let classes = this.state.current_page === number ? 'active' : '';\n\n            if (number == 1 || number == this.state.total_pages || (number >= this.state.current_page - 2 && number <= this.state.current_page + 2)) {\n                return (\n                    <span key={number} className={classes} onClick={() => this.getPaginated(number)}>{number}</span>\n                );\n            }\n        });\n\n        let searchForm;\n\n        if (!this.props.hideSearch) {\n            searchForm = (\n                <SearchForm onChangeHandler={this.handleSearch} />\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <DatatableStyleWrapper className=\"iosDatatableWrapper\">\n                    {searchForm}\n                    <Table \n                        onRow={(record, rowIndex) => {\n                            return {\n                                onClick: event => {this.selected(record)},\n                            };\n                        }}                \n                        columns={this.props.columns} \n                        dataSource={this.state.data} \n                        pagination={false}\n                    />\n                    \n                    {/* <table className={['table', 'table-striped', 'table-hover'].join(' ')}>\n                        <thead>\n                            <tr>\n                            <th></th>\n                            {this.props.columns.map((column, index) => <th key={index}>{column.title}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.tableList()}\n                        </tbody>\n                    </table> */}\n                    <div className=\"pagination\">\n                        <span onClick={() => this.getPaginated(1)}>&laquo;</span>\n                        {renderPageNumbers}\n                        <span onClick={() => this.getPaginated(this.props.last_page)}>&raquo;</span>\n                    </div>\n                </DatatableStyleWrapper>\n            </React.Fragment>\n        );\n    };\n}\n\nDatatable.defaultProps = {\n    hideSearch: false\n}\n\nexport default withRouter(Datatable);","export { default } from './Datatable.component';"],"sourceRoot":""}