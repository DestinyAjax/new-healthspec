{"version":3,"sources":["pages/Plan/All/PlanAll.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Breadcrumb/Breadcrumb.component.module.css","ui/Breadcrumb/Breadcrumb.component.js","ui/Breadcrumb/index.js","ui/Datatable/SearchForm.component.js","ui/Datatable/Datatable.style.js","ui/Datatable/Datatable.component.js","ui/Datatable/index.js"],"names":["PlanAll","state","meta","current_page","showNotificationFrom","nextProps","a","async","delete_plan_status","swal","title","text","icon","closeOnClickOutside","props","resetStorePlan","getNewPlansWith","page_number","getPlans","delete","plan","name","type","buttons","dangerMode","deletePlan","slug","edit","history","push","this","setState","className","to","columns","key","cell","dataIndex","searchable","search_key","sorter","b","length","url","actions","Component","connect","PlanReducer","plans","status","get_plans_status","dispatch","payload","LayoutContentStyle","styled","div","palette","module","exports","Breadcrumb","links","map","link","styles","item","itemTwo","join","defaultProps","withRouter","active","ChoseRoleReducer","role","reduxForm","form","onChangeHandler","Field","component","CustomInput","placeholder","validate","onChange","event","target","value","DatatableStyleWrapper","WithDirection","Datatable","data","per_page","last_page","loading","total_pages","active_data","show_actions","query","get","end_point","getStorage","token","fetch","method","headers","handleSearch","filter","column","response","json","reset","detectQueryString","RegExp","test","fetchData","request","tableData","table","index","id","total","getPaginated","selected","row","console","log","JSON","stringify","action","classes","onClick","handle","customswal","content","param","newData","tableList","aria-hidden","is_selected","col","container","colSpan","Fragment","pageNumbers","i","Math","ceil","searchForm","renderPageNumbers","number","hideSearch","onRow","record","rowIndex","dataSource","pagination","React"],"mappings":"gSAYMA,E,2MAEFC,MAAQ,CACJC,KAAM,GACNC,aAAc,G,EAOlBC,qBAAuB,SAAMC,GAAN,SAAAC,EAAAC,OAAA,mDACkB,MAAjCF,EAAUG,mBADK,kCAAAF,EAAA,MAEGG,IAAK,CACnBC,MAAO,YACPC,KAAK,6BACLC,KAAM,UACNC,qBAAqB,KANV,eAWX,EAAKC,MAAMC,iBAXA,UAckB,MAAjCV,EAAUG,mBAdK,mCAAAF,EAAA,MAeGG,IAAK,CACnBC,MAAO,eACPC,KAAK,wBACLC,KAAM,QACNC,qBAAqB,KAnBV,eAuBX,EAAKC,MAAMC,iBAvBA,uC,EAqCvBC,gBAAkB,SAAAC,GACd,EAAKH,MAAMI,SAASD,I,EAGxBE,OAAS,SAAMC,GAAN,SAAAd,EAAAC,OAAA,kEAAAD,EAAA,MACaG,IAAK,CACnBC,MAAM,oCAAD,OAAsCU,EAAKC,KAA3C,KACLC,KAAM,UACNC,QAAS,CACL,KACA,mBAEJC,YAAY,KARX,eAYD,EAAKV,MAAMW,WAAW,CAClBC,KAAMN,EAAKM,OAbd,sC,EAkBTC,KAAO,SAAAP,GACH,EAAKN,MAAMc,QAAQC,KAAnB,+BAAgDT,EAAKM,Q,mFA/DrDI,KAAKhB,MAAMI,SAAS,K,gDA+BEb,GACtByB,KAAK1B,qBAAqBC,GAC1ByB,KAAKC,SAAS,CACV7B,KAAMG,EAAUH,KAChBC,aAAcE,EAAUH,KAAKC,iB,+BAiCjC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAK6B,UAAU,OACX,yBAAKA,UAAU,YACX,0CAEJ,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMA,UAAU,GAAGC,GAAG,uBAClB,4BAAQD,UAAU,yBAAyBV,KAAK,UAAhD,eAGN,6BACN,yBAAKU,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CACIE,QAAS,CACL,CACIC,IAAK,KACLzB,MAAO,KACP0B,KAAM,UACNC,UAAW,KACXC,YAAY,GAEhB,CACIF,KAAM,UACNE,YAAY,EACZH,IAAK,OACLzB,MAAO,OACP2B,UAAW,OACXE,WAAY,OACZC,OAAQ,SAAClC,EAAEmC,GAAH,OAASnC,EAAEe,KAAKqB,OAASD,EAAEpB,KAAKqB,SAE5C,CACIN,KAAM,UACND,IAAK,OACLG,YAAY,EACZ5B,MAAO,OACP6B,WAAY,OACZF,UAAW,QAEf,CACIF,IAAK,YACLzB,MAAO,SACP0B,KAAM,UACNE,YAAY,EACZD,UAAW,cAGnBM,IAAK,aACLC,QAAS,CAOL,CACIT,IAAK,OACLb,KAAM,OACNZ,MAAO,OACPiC,IAAK,wBAET,CACIR,IAAK,OACLb,KAAM,SACNZ,MAAO,SACPiC,IAAK,uC,GAjJ/BE,aA4KPC,uBAbS,SAAA7C,GAAK,MAAK,CAC9BC,KAAMD,EAAM8C,YAAY7C,KACxB8C,MAAO/C,EAAM8C,YAAYC,MACzBC,OAAQhD,EAAM8C,YAAYG,iBAC1B1C,mBAAoBP,EAAM8C,YAAYvC,uBAGf,SAAA2C,GAAQ,MAAK,CACpCjC,SAAU,SAAAkC,GAAO,OAAID,EAAUjC,YAASkC,KACxCrC,eAAgB,kBAAMoC,EAAUpC,gBAChCU,WAAY,SAAA2B,GAAO,OAAID,EAAU1B,YAAW2B,QAGjCN,CAA6C9C,I,+OCrL5D,IAQeqD,EARYC,IAAOC,IAAV,IAIFC,kBAAQ,SAAU,ICLzBH,O,oBCDfI,EAAOC,QAAU,CAAC,UAAY,wCAAwC,KAAO,mCAAmC,QAAU,wC,gGCKpHC,EAAa,SAAA7C,GACf,IAAI8C,EAAQ9C,EAAM8C,MAAMC,KAAI,SAAAC,GAAI,OAC5B,kBAAC,IAAD,CAAM7B,GAAI6B,EAAKnB,IAAKX,UAAW,CAAC+B,IAAOC,KAAMD,IAAOE,SAASC,KAAK,KAAM/B,IAAK2B,EAAKnB,KAAlF,MAA2FmB,EAAKzC,SAGpG,OACI,yBAAKW,UAAW,uBACZ,kBAAC,IAAD,CAAMA,UAAW+B,IAAOC,KAAM/B,GAAG,eAAjC,aACC2B,IAKbD,EAAWQ,aAAe,CACtBP,MAAO,IAGX,IAMeQ,cAAWtB,aANF,SAAA7C,GACpB,MAAO,CACHoE,OAAQpE,EAAMqE,iBAAiBC,QAIbzB,CAAyBa,IC7BnD,mC,0LC6Bea,cAAU,CACrBC,KAAM,cADKD,EAvBI,SAAA1D,GAAU,IAEjB4D,EAAoB5D,EAApB4D,gBAMR,OACI,8BACI,kBAACC,EAAA,EAAD,CACItD,KAAK,QACLuD,UAAWC,IACXvD,KAAK,OACLwD,YAAY,SACZC,SAAU,GACVC,SAZU,SAAAC,GAClBP,EAAgBO,EAAMC,OAAOC,c,uiDCRrC,IAAMC,EAAwB9B,IAAOC,IAAV,KA6FZ8B,cAAcD,GCpFvBE,E,2MAEFrF,MAAQ,CACJsF,KAAM,GACNC,SAAU,GACVC,UAAW,EACXC,SAAS,EACTC,YAAa,EACbxF,aAAc,EACdyF,YAAa,KACbC,cAAc,EACdC,MAAO,I,EAGXC,IAAM,SAAMC,GAAN,eAAA1F,EAAAC,OAAA,kEAAAD,EAAA,MACgB2F,YAAW,oBAD3B,cACEC,EADF,yBAGKC,MAAMxD,IAAMqD,EAAW,CAC1BI,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,oBAAuB,kCACvB,UAAaH,MATnB,sC,EAcNI,aAAe,SAAMnB,GAAN,qBAAA7E,EAAAC,OAAA,uDACP+B,EAAa,EAAKxB,MAAMoB,QAAQqE,QAAO,SAAAC,GAAM,OAAIA,EAAOlE,cAAYuB,KAAI,SAAA2C,GAAM,OAAIA,EAAOjE,cAAY2B,KAAK,KAC1G4B,EAFO,UAEIxD,EAFJ,YAEkB6C,GAFlB,WAAA7E,EAAA,MAIU,EAAKyF,IAAL,UAAY,EAAKjF,MAAM6B,IAAvB,mBAAqCmD,KAJ/C,cAIPW,EAJO,kBAAAnG,EAAA,MAKQmG,EAASC,QALjB,OAKLnB,EALK,OAOX,EAAKoB,MAAMpB,GAPA,sC,EAUfqB,kBAAoB,SAACjE,GAMjB,OAFc,IAAIkE,OAAO,YAEVC,KAAKnE,I,EAGxBoE,UAAY,SAAOpE,EAAK1B,GAAZ,mBAAAX,EAAAC,OAAA,uDAER,EAAKwB,SAAS,CAAE2D,SAAS,IACQsB,EAA7B,EAAKJ,kBAAkBjE,GAAgB,EAAKoD,IAAL,UAAYpD,EAAZ,iBAAwB1B,IACpD,EAAK8E,IAAL,UAAYpD,EAAZ,iBAAwB1B,IAJ/B,WAAAX,EAAA,MAMa0G,GANb,cAMJP,EANI,kBAAAnG,EAAA,MAOWmG,EAASC,QAPpB,OAOFnB,EAPE,OASR,EAAKoB,MAAMpB,GATH,sC,EAYZoB,MAAQ,SAAApB,GACJ,IAAaI,EAAaF,EAAWtF,EACjC8G,EAAY,GAEZ1B,EAAKA,MACKA,EAAKA,KAAK1B,KAAI,SAAA0B,GAEpB,OADAA,EAAI,aAAkB,EACfA,KAEH1B,KAAI,SAACqD,EAAMC,GACfD,EAAK,IAAUA,EAAME,GACrBH,EAAUpF,KAAKqF,MAEnBvB,EAAcJ,EAAKrF,KAAKmH,MACxB5B,EAAYF,EAAKrF,KAAKuF,UACtBtF,EAAeoF,EAAKrF,KAAKC,eAEf,GACVwF,EAAc,EACdF,EAAY,EACZtF,EAAe,GAGnB,EAAK4B,SAAS,CACVwD,KAAM0B,EACNvB,SAAS,EACTC,YAAaA,EACbF,UAAWA,EACXtF,aAAcA,K,EAQtBmH,aAAe,SAAArG,GACX,EAAK8F,UAAU,EAAKjG,MAAM6B,IAAK1B,I,EAGnCsG,SAAW,SAAAC,GACPC,QAAQC,IAAIC,KAAKC,UAAUJ,IAC3B,IAAIP,EAAY,GACF,EAAKhH,MAAMsF,KAAK1B,KAAI,SAAA0B,GAO9B,OANAA,EAAI,aAAkB,EAElBiC,EAAIJ,KAAO7B,EAAK6B,KAChB7B,EAAI,aAAkB,GAGnBA,KAGH1B,KAAI,SAACqD,EAAMC,GACfD,EAAK,IAAUA,EAAME,GACrBH,EAAUpF,KAAKqF,MAGnB,EAAKnF,SAAS,CACVwD,KAAM0B,EACNrB,YAAa4B,EACb3B,cAAc,IACf,0BAAAvF,EAAAC,OAAA,gDACK,EAAKO,MAAM8B,QAAQF,SACfE,EAAU,EAAK9B,MAAM8B,QAAQiB,KAAI,SAACgE,EAAQV,GAE1C,IAAIW,EAAO,gBAWX,MAToB,SAAhBD,EAAOvG,OACPwG,EAAO,eAGS,SAAhBD,EAAOvG,OACPwG,EAAO,eAKP,yBAAK3F,IAAKgF,EAAOnF,UAAW8F,EAASC,QAAS,kBAAM,EAAKC,OAAOH,KAC3DA,EAAOnH,UAKpBuH,IAAW,CACPC,QACI,6BACI,8CACA,yBAAKlG,UAAU,YACVY,IAIbrB,SAAS,KA/BlB,yC,EAqCPJ,OAAS,SAAOgB,EAAKQ,GAAZ,mBAAArC,EAAAC,OAAA,uDAUD4H,EAAQ,EAAKlI,MAAM2F,YAAYzD,GAV9B,WAAA7B,EAAA,MAYgB,EAAKyF,IAAL,UAAYpD,GAAZ,OAAkBwF,KAZlC,cAYD1B,EAZC,kBAAAnG,EAAA,MAacmG,EAASC,QAbvB,OAgBe,MAhBf,OAgBIzD,SACDmF,EAAU,YAAI,EAAKnI,MAAMsF,MAAMgB,QAAO,SAAAhB,GACtC,OAAO4C,IAAU5C,EAAKpD,MAG1B,EAAKJ,SAAS,CACVwD,KAAM6C,KAtBT,sC,EA2BTJ,OAAS,mCAAA1H,EAAAC,OAAA,uDAASe,EAAT,EAASA,KAAMqB,EAAf,EAAeA,IAAKR,EAApB,EAAoBA,IAApB,WAAA7B,EAAA,MACaG,IAAK,CACnBC,MAAM,4BAAD,OAA8BY,GACnCA,KAAM,UACNC,QAAS,CACL,KACA,sBANH,sCAUY,WAATD,GACA,EAAKH,OAAOgB,EAAKQ,GAGR,SAATrB,EAdH,uBAeO6G,EAAQ,EAAKlI,MAAM2F,YAAYzD,GAftC,kBAgBU,EAAKrB,MAAMc,QAAQC,KAAnB,UAA2Bc,GAA3B,OAAiCwF,KAhB3C,UAkBY,SAAT7G,EAlBH,wBAmBO6G,EAAQ,EAAKlI,MAAM2F,YAAYzD,GAnBtC,kBAoBU,EAAKrB,MAAMc,QAAQC,KAAnB,UAA2Bc,GAA3B,OAAiCwF,KApB3C,uC,EAyBTE,UAAY,WAGR,GAAI,EAAKpI,MAAMsF,KAAK7C,OAChB,OAAO,EAAKzC,MAAMsF,KAAK1B,KAAI,SAAA2D,GACvB,IAAI5G,EAAO,uBAAGoB,UAAU,oBAAoBsG,cAAY,SAMxD,OAJId,EAAIe,cACJ3H,EAAO,uBAAGoB,UAAU,eAAesG,cAAY,UAI/C,wBAAInG,IAAKqF,EAAIJ,GAAIW,QAAS,kBAAM,EAAKR,SAASC,KAC1C,4BAAK5G,GACJ,EAAKE,MAAMoB,QAAQ2B,KAAI,SAAA2E,GAAG,OACvB,wBAAIrG,IAAKqG,EAAIrG,KACRqF,EAAIgB,EAAIrG,aAQjC,IAAIsG,EACA,4BACI,wBAAIC,QAAS,EAAK5H,MAAMoB,QAAQQ,OAAS,EAAGV,UAAU,UAAtD,sBAYR,OARI,EAAK/B,MAAMyF,UACX+C,EACI,4BACI,wBAAIC,QAAS,EAAK5H,MAAMoB,QAAQQ,OAAS,EAAGV,UAAU,UAAtD,8BAMR,kBAAC,IAAM2G,SAAP,KACKF,I,mFA9JT3G,KAAKiF,UAAUjF,KAAKhB,MAAM6B,IAAK,K,+BAqK/B,IAFM,IAAD,OACCiG,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKjH,KAAK7B,MAAM0F,YAAc7D,KAAK7B,MAAMuF,UAAWqD,IAC1ED,EAAY/G,KAAKgH,GAGrB,IAUIG,EAVEC,EAAoBL,EAAY/E,KAAI,SAAAqF,GACtC,IAAIpB,EAAU,EAAK7H,MAAME,eAAiB+I,EAAS,SAAW,GAE9D,GAAc,GAAVA,GAAeA,GAAU,EAAKjJ,MAAM0F,aAAgBuD,GAAU,EAAKjJ,MAAME,aAAe,GAAK+I,GAAU,EAAKjJ,MAAME,aAAe,EACjI,OACI,0BAAMgC,IAAK+G,EAAQlH,UAAW8F,EAASC,QAAS,kBAAM,EAAKT,aAAa4B,KAAUA,MAa9F,OANKpH,KAAKhB,MAAMqI,aACZH,EACI,kBAAC,EAAD,CAAYtE,gBAAiB5C,KAAKwE,gBAKtC,kBAAC,IAAMqC,SAAP,KACI,kBAAC,EAAD,CAAuB3G,UAAU,uBAC5BgH,EACD,uBACII,MAAO,SAACC,EAAQC,GACZ,MAAO,CACHvB,QAAS,SAAA9C,GAAU,EAAKsC,SAAS8B,MAGzCnH,QAASJ,KAAKhB,MAAMoB,QACpBqH,WAAYzH,KAAK7B,MAAMsF,KACvBiE,YAAY,IAchB,yBAAKxH,UAAU,cACX,0BAAM+F,QAAS,kBAAM,EAAKT,aAAa,KAAvC,QACC2B,EACD,0BAAMlB,QAAS,kBAAM,EAAKT,aAAa,EAAKxG,MAAM2E,aAAlD,e,GApTAgE,IAAM5G,WA4T9ByC,EAAUnB,aAAe,CACrBgF,YAAY,GAGD/E,kBAAWkB,GC5U1B","file":"static/js/57.97db81ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../../containers/Dashboard/Dashboard';\nimport Breadcrumb from \"../../../ui/Breadcrumb\";\nimport Datatable from '../../../ui/Datatable';\nimport Loader from '../../../ui/Loader/Loader.Component';\nimport { getPlans, resetStorePlan, deletePlan } from '../../../shared/actions/Plan.action';\n\nclass PlanAll extends Component {\n\n    state = {\n        meta: {},\n        current_page: 1,\n    }\n\n    componentDidMount() {\n        this.props.getPlans(1);\n    }\n\n    showNotificationFrom = async nextProps => {\n        if (nextProps.delete_plan_status === 200) {\n            let alert = await swal({\n                title: \"Good job!\",\n                text: `Plan deleted successfully!`,\n                icon: \"success\",\n                closeOnClickOutside: false\n            });\n\n\n            if (alert) {\n                this.props.resetStorePlan();\n            }\n        }\n        if (nextProps.delete_plan_status === 522) {\n            let alert = await swal({\n                title: \"No internet!\",\n                text: `Plan was not deleted!`,\n                icon: \"error\",\n                closeOnClickOutside: false\n            });\n\n            if (alert) {\n                this.props.resetStorePlan();\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.showNotificationFrom(nextProps);\n        this.setState({\n            meta: nextProps.meta,\n            current_page: nextProps.meta.current_page\n        });\n    }\n\n\n    getNewPlansWith = page_number => {\n        this.props.getPlans(page_number);\n    }\n\n    delete = async plan => {\n        let alert = await swal({\n            title: `Are you sure you want to delete [${plan.name}]`,\n            type: 'warning',\n            buttons: [\n                'No',\n                'Yes, I am sure!'\n            ],\n            dangerMode: true,\n        });\n\n        if (alert) {\n            this.props.deletePlan({\n                slug: plan.slug,\n            });\n        }\n    }\n\n    edit = plan => {\n        this.props.history.push(`/dashboard/plan_edit_${plan.slug}`);\n    }\n\n    render() {\n\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>  \n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4>All Plans</h4>\n                                </div>\n                                <div className=\"col-md-6 text-right\">\n                                    <Link className=\"\" to=\"/dashboard/plan_add\">\n                                        <button className=\"btn btn-sm btn-success\" type=\"button\">Add Plan</button>\n                                    </Link>\n                                </div> \n                            </div><hr/>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <Datatable\n                                        columns={[\n                                            {\n                                                key: 'id',\n                                                title: 'ID',\n                                                cell: 'Default',\n                                                dataIndex: 'id',\n                                                searchable: false,\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                searchable: true,\n                                                key: 'name',\n                                                title: 'Name',\n                                                dataIndex: 'name',\n                                                search_key: 'name',\n                                                sorter: (a,b) => a.name.length - b.name.length\n                                            },\n                                            {\n                                                cell: 'Default',\n                                                key: 'code',\n                                                searchable: true,\n                                                title: 'Code',\n                                                search_key: 'code',\n                                                dataIndex: 'code'\n                                            },\n                                            {\n                                                key: 'is_active',\n                                                title: 'Status',\n                                                cell: 'Default',\n                                                searchable: false,\n                                                dataIndex: 'is_active'\n                                            },\n                                        ]}\n                                        url={'plan/index'}\n                                        actions={[\n                                            // {\n                                            //     key: 'slug',\n                                            //     type: 'view',\n                                            //     title: 'View',\n                                            //     url: 'plan_view_'\n                                            // },\n                                            {\n                                                key: 'slug',\n                                                type: 'edit',\n                                                title: 'Edit',\n                                                url: 'dashboard/plan_edit_'\n                                            },\n                                            {\n                                                key: 'slug',\n                                                type: 'delete',\n                                                title: 'Delete',\n                                                url: 'dashboard/plan/delete/'\n                                            },\n                                        ]}\n                                    />\n                                </div>\n                            </div>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    meta: state.PlanReducer.meta,\n    plans: state.PlanReducer.plans,\n    status: state.PlanReducer.get_plans_status,\n    delete_plan_status: state.PlanReducer.delete_plan_status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getPlans: payload => dispatch( getPlans(payload) ),\n    resetStorePlan: () => dispatch( resetStorePlan() ),\n    deletePlan: payload => dispatch( deletePlan(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanAll);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Breadcrumb.component_container__2V5_E\",\"item\":\"Breadcrumb.component_item__ZqqpH\",\"itemTwo\":\"Breadcrumb.component_itemTwo__1JtzI\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport styles from './Breadcrumb.component.module.css';\n\nconst Breadcrumb = props => {\n    let links = props.links.map(link => (\n        <Link to={link.url} className={[styles.item, styles.itemTwo].join(\" \")} key={link.url}> > {link.name}</Link>\n    ));\n\n    return (\n        <div className={'card-body bg-light '} >\n            <Link className={styles.item} to=\"/chose_role\">Dashboard</Link>\n            {links}\n        </div>\n    )\n}\n\nBreadcrumb.defaultProps = {\n    links: []\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.ChoseRoleReducer.role\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Breadcrumb));","export { default } from './Breadcrumb.component';","import React from 'react';\nimport CustomInput from '../CustomInput';\nimport { Field, reduxForm } from 'redux-form';\n// import { requiredValidator } from '../../../shared/utils/validation';\n\n\nconst SearchForm = props => {\n\n    const { onChangeHandler } = props\n\n    const onNameChanged = event => {\n        onChangeHandler(event.target.value);\n    }\n\n    return (\n        <form>\n            <Field\n                name=\"value\"\n                component={CustomInput}\n                type=\"text\"\n                placeholder=\"Search\"\n                validate={[]}\n                onChange={onNameChanged}\n            />\n        </form>\n    )\n\n}\n\nexport default reduxForm({\n    form: 'SearchForm'\n})(SearchForm);","import styled from 'styled-components';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst DatatableStyleWrapper = styled.div`\n  \n  .pagination {\n    margin-top: 25px !important;\n  }\n\n  .pagination span {\n    cursor: pointer;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n  }\n\n  .pagination span.active {\n    background-color: #15974b;\n    color: white;\n    border: 1px solid #15974b;\n  }\n\n.center {\n  text-align: center;\n}\n.actions {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n}\n.actions2 {\n  width: 50%;\n  margin: 15px auto;\n}\n\n.action {\n    opacity: 1;\n    display: block;\n    font-size: 12px;\n    cursor: pointer;\n    padding: 10px 10px;\n\n    color: #FFFFFF;\n    border-radius: 5px;\n    letter-spacing: 0.29px;\n    transition: all 0.3s ease 0s;\n    border: 1px solid transparent;\n\n    margin-bottom: 15px;\n}\n.delete {\n  opacity: .8;\n  background: #e43829;\n}\n.edit {\n  opacity: .8;\n  background: #ffca28;\n}\n.view {\n  opacity: .8;\n  background: #15974b;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 5px 5px;\n  /* background: #eceeef; */\n  margin-bottom: 15px;\n}\n.field,\n.comparison {\n  width: 14%;\n}\n.form {\n  width: 30%;\n}\n.filter {\n  width: 10%;\n}\n.button {\n  width: 100%;\n  display: block;\n  background: #eceeef;\n  padding: 5px 5px;\n  border-radius: 5px;\n  text-align: center;\n  margin-top: 7px;\n}\n\n`;\n\nexport default WithDirection(DatatableStyleWrapper);\n","import React from 'react';\nimport swal from 'sweetalert';\nimport { Table, Tag } from 'antd';\n// import Filter from './Filter.component';\nimport { withRouter } from 'react-router-dom';\nimport SearchForm from './SearchForm.component';\nimport customswal from '@sweetalert/with-react';\nimport { getStorage } from '../../shared/utils/storage';\nimport { url } from './../../config';\n\nimport DatatableStyleWrapper from './Datatable.style';\n\nclass Datatable extends React.Component {\n\n    state = {\n        data: [],\n        per_page: 20,\n        last_page: 0,\n        loading: true,\n        total_pages: 0,\n        current_page: 0,\n        active_data: null,\n        show_actions: false,\n        query: ''\n    };\n\n    get = async end_point => {\n        let token = await getStorage('ohis:auth_token');\n\n        return fetch(url + end_point, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"AuthorizationHeader\": \"Bearer OSUN_1234567890987654321\",\n                'AuthToken': token\n            },\n        });\n    }\n\n    handleSearch = async value => {\n        let searchable = this.props.columns.filter(column => column.searchable).map(column => column.search_key).join(\"*\");\n        let query = `${searchable}:${value}`;\n\n        let response = await this.get(`${this.props.url}?search=${query}`);\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    detectQueryString = (url) => {\n        // get the current URL\n\n        // regex pattern for detecting ? character\n        var pattern = new RegExp(/\\?.+=.*/g);\n\n        return pattern.test(url);\n    }\n\n    fetchData = async (url, page_number) => {\n        let request;\n        this.setState({ loading: true });\n        if (this.detectQueryString(url)) request = this.get(`${url}&page=${page_number}`);\n        else request = this.get(`${url}?page=${page_number}`);\n        //make http request\n        let response = await request;\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    reset = data => {\n        let newData, total_pages, last_page, current_page;\n        let tableData = [];\n        \n        if (data.data) {\n            newData = data.data.map(data => {\n                data['is_selected'] = false;\n                return data;\n            });\n            newData.map((table,index) => {\n                table['key'] = table.id\n                tableData.push(table);\n            });\n            total_pages = data.meta.total;\n            last_page = data.meta.last_page;\n            current_page = data.meta.current_page;\n        } else {\n            newData = [];\n            total_pages = 0;\n            last_page = 0;\n            current_page = 0;\n        }\n\n        this.setState({\n            data: tableData,\n            loading: false,\n            total_pages: total_pages,\n            last_page: last_page,\n            current_page: current_page\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData(this.props.url, 1);\n    }\n\n    getPaginated = page_number => {\n        this.fetchData(this.props.url, page_number);\n    }\n\n    selected = row => {\n        console.log(JSON.stringify(row));\n        let tableData = [];\n        let newData = this.state.data.map(data => {\n            data['is_selected'] = false;\n\n            if (row.id === data.id) {\n                data['is_selected'] = true;\n            }\n\n            return data;\n        });\n\n        newData.map((table,index) => {\n            table['key'] = table.id\n            tableData.push(table);\n        });\n\n        this.setState({\n            data: tableData,\n            active_data: row,\n            show_actions: true\n        }, async () => {\n            if (this.props.actions.length) {\n                let actions = this.props.actions.map((action, index) => {\n\n                    let classes = `action delete`;\n\n                    if (action.type === 'edit') {\n                        classes = `action edit`;\n                    }\n\n                    if (action.type === 'view') {\n                        classes = `action view`;\n                    }\n\n\n                    return (\n                        <div key={index} className={classes} onClick={() => this.handle(action)}>\n                            {action.title}\n                        </div>\n                    )\n                });\n\n                customswal({\n                    content: (\n                        <div>\n                            <h1>Action List(s)</h1>\n                            <div className=\"actions2\">\n                                {actions}\n                            </div>\n                        </div>\n                    ),\n                    buttons: false,\n                });\n            }\n        });\n    }\n\n    delete = async (key, url) => {\n        //set is deleting status on the particular table\n        // let newData = data.data.map(data => {\n        //     data['is_selected'] = false;\n        //     return data;\n        // });\n        // this.setState({\n        //     data: newData,\n        // });\n\n        let param = this.state.active_data[key];\n\n        let response = await this.get(`${url}${param}`);\n        const data = await response.json();\n\n\n        if (data.status === 200) {\n            let newData = [...this.state.data].filter(data => {\n                return param !== data[key]\n            });\n\n            this.setState({\n                data: newData,\n            });\n        }\n    }\n\n    handle = async ({ type, url, key }) => {\n        let alert = await swal({\n            title: `Are you sure you want to ${type}`,\n            type: 'warning',\n            buttons: [\n                'No',\n                'Yes, I am sure!'\n            ],\n        });\n        if (alert) {\n            if (type === 'delete') {\n                this.delete(key, url);\n            }\n            //edit\n            if (type === 'edit') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n            if (type === 'view') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n        }\n    }\n\n    tableList = () => {\n        let values = [];\n\n        if (this.state.data.length) {\n            return this.state.data.map(row => {\n                let icon = <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n\n                if (row.is_selected) {\n                    icon = <i className=\"fa fa-circle\" aria-hidden=\"true\"></i>\n                }\n\n                return (\n                    <tr key={row.id} onClick={() => this.selected(row)}>\n                        <td>{icon}</td>\n                        {this.props.columns.map(col =>\n                            <td key={col.key}>\n                                {row[col.key]}\n                            </td>\n                        )}\n                    </tr>\n                )\n            });\n        }\n\n        let container = (\n            <tr>\n                <td colSpan={this.props.columns.length + 1} className=\"center\">No Records Found.</td>\n            </tr>\n        )\n\n        if (this.state.loading) {\n            container = (\n                <tr>\n                    <td colSpan={this.props.columns.length + 1} className=\"center\">Slow network, Loading...</td>\n                </tr>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                {container}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(this.state.total_pages / this.state.per_page); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let classes = this.state.current_page === number ? 'active' : '';\n\n            if (number == 1 || number == this.state.total_pages || (number >= this.state.current_page - 2 && number <= this.state.current_page + 2)) {\n                return (\n                    <span key={number} className={classes} onClick={() => this.getPaginated(number)}>{number}</span>\n                );\n            }\n        });\n\n        let searchForm;\n\n        if (!this.props.hideSearch) {\n            searchForm = (\n                <SearchForm onChangeHandler={this.handleSearch} />\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <DatatableStyleWrapper className=\"iosDatatableWrapper\">\n                    {searchForm}\n                    <Table \n                        onRow={(record, rowIndex) => {\n                            return {\n                                onClick: event => {this.selected(record)},\n                            };\n                        }}                \n                        columns={this.props.columns} \n                        dataSource={this.state.data} \n                        pagination={false}\n                    />\n                    \n                    {/* <table className={['table', 'table-striped', 'table-hover'].join(' ')}>\n                        <thead>\n                            <tr>\n                            <th></th>\n                            {this.props.columns.map((column, index) => <th key={index}>{column.title}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.tableList()}\n                        </tbody>\n                    </table> */}\n                    <div className=\"pagination\">\n                        <span onClick={() => this.getPaginated(1)}>&laquo;</span>\n                        {renderPageNumbers}\n                        <span onClick={() => this.getPaginated(this.props.last_page)}>&raquo;</span>\n                    </div>\n                </DatatableStyleWrapper>\n            </React.Fragment>\n        );\n    };\n}\n\nDatatable.defaultProps = {\n    hideSearch: false\n}\n\nexport default withRouter(Datatable);","export { default } from './Datatable.component';"],"sourceRoot":""}