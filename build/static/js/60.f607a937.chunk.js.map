{"version":3,"sources":["pages/ReferralAll/ReferralAll.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Breadcrumb/Breadcrumb.component.module.css","ui/Breadcrumb/Breadcrumb.component.js","ui/Breadcrumb/index.js","ui/Datatable/SearchForm.component.js","ui/Datatable/Datatable.style.js","ui/Datatable/Datatable.component.js","ui/Datatable/index.js"],"names":["ReferralAll","state","query_string","submitFilter","type","props","match","params","claims","toUpperCase","setState","this","page_name","actionButtons","columns","DatatableList","actions","active","links","className","style","marginRight","to","cell","dataIndex","searchable","key","title","sorter","a","b","provider_name","length","search_key","beneficiary_first_name","beneficiary_surname","Fragment","service_name","role","name","url","query","hideSearch","id","breadcrumb_url","breadcrumb_name","width","marginBottom","Component","connect","ChoseRoleReducer","LayoutContentStyle","styled","div","palette","module","exports","Breadcrumb","map","link","styles","item","itemTwo","join","defaultProps","withRouter","reduxForm","form","onChangeHandler","Field","component","CustomInput","placeholder","validate","onChange","event","target","value","DatatableStyleWrapper","WithDirection","Datatable","data","per_page","last_page","loading","total_pages","current_page","active_data","show_actions","get","end_point","async","getStorage","token","fetch","method","headers","handleSearch","filter","column","response","json","reset","detectQueryString","RegExp","test","fetchData","page_number","request","tableData","table","index","push","meta","total","getPaginated","selected","row","console","log","JSON","stringify","action","classes","onClick","handle","customswal","content","buttons","delete","param","status","newData","swal","history","tableList","icon","aria-hidden","is_selected","col","container","colSpan","pageNumbers","i","Math","ceil","searchForm","renderPageNumbers","number","onRow","record","rowIndex","dataSource","pagination","React"],"mappings":"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","file":"static/js/60.f607a937.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Card} from 'antd';\nimport { Link } from 'react-router-dom';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../containers/Dashboard/Dashboard';\nimport Breadcrumb from \"../../ui/Breadcrumb\";\nimport Datatable from '../../ui/Datatable';\nimport Loader from '../../ui/Loader/Loader.Component';\n\nclass ReferralAll extends Component {\n\n    state = {\n        query_string: null,\n    };\n\n    componentDidMount(){\n        this.submitFilter()\n    }\n\n    submitFilter = type => {\n        if(this.props.match.params.claims){\n            this.query_string = `claim_type=${this.props.match.params.claims}`;\n        }else if(this.props.match.params.type){\n            this.query_string = `type=${this.props.match.params.type.toUpperCase()}`;\n        }else{\n            this.query_string = \"type=PREAUTH\";\n        }\n        this.setState({\n            query_string: this.query_string,\n        });\n    }\n\n    render() {\n\n        let actions = [];\n        let page_name, actionButtons, columns;\n        const { active } = this.props;\n        if(this.props.match.params.claims) {\n            let type = this.props.match.params.claims;\n            page_name = (\n                <h4>Claim Items :: {type.toUpperCase()})</h4>\n            )\n            if(this.props.match.params.claims){\n                let links;\n                if(type === \"claim\") {\n                    links =(\n                        <div className=\"list_row\">\n                            <Link style={{marginRight: '10px'}} className=\"pull-right btn btn-sm btn-danger\" to=\"/dashboard/claim_services/claim\">All Approved Requests</Link>\n                            <Link style={{marginRight: '10px'}} className=\"pull-right btn btn-sm btn-success\" to=\"/dashboard/claim_services/claimed\">Submitted Claims</Link>\n                            <Link className=\"btn btn-sm btn-success pull-right\" to=\"/dashboard/claim_services/paid\">Paid Claims</Link>\n                        </div>\n                    )\n                }\n                if(type === \"claimed\") {\n                    links =(\n                        <div className=\"list_row\">\n                            <Link style={{marginRight: '10px'}} to=\"/dashboard/claim_services/claim\" className=\"pull-right btn btn-sm btn-success\">All Approved Requests</Link>\n                            <Link style={{marginRight: '10px'}} to=\"/dashboard/claim_services/claimed\" className=\"pull-right btn btn-sm btn-danger\">Submitted Claims</Link>\n                            <Link to=\"/dashboard/claim_services/paid\" className=\"btn btn-sm btn-success pull-right\">Paid Claims</Link>\n                        </div>\n                    )\n                }\n                if(type === \"paid\") {\n                    links =(\n                        <div className=\"list_row\">\n                            <Link style={{marginRight: '10px'}} className=\"btn btn-sm btn-success pull-right\" to=\"/dashboard/claim_services/claim\">All Approved Requests</Link>\n                            <Link style={{marginRight: '10px'}} className=\"btn btn-sm btn-success pull-right\" to=\"/dashboard/claim_services/claimed\">Submitted Claims</Link>\n                            <Link className=\"btn btn-sm btn-danger pull-right\" to=\"/claim_services/paid\">Paid Claims</Link>\n                        </div>\n                    )\n                }\n                actionButtons = (\n                    <div className=\"pull-right\">{links}</div>\n                );\n\n                columns = [\n                    {\n                        cell: 'Default',\n                        dataIndex: 'provider_name',\n                        searchable: true,\n                        key: 'provider_name',\n                        title: 'Hospital Name',\n                        sorter: (a,b) => a.provider_name.length - b.provider_name.length\n                    },\n                    {\n                        cell: 'Default',\n                        searchable: true,\n                        key: 'beneficiary_first_name',\n                        dataIndex: 'beneficiary_first_name',\n                        title: 'Enrollee First Name',\n                        search_key: 'user.first_name',\n                        sorter: (a,b) => a.beneficiary_first_name.length - b.beneficiary_first_name.length\n                    },\n                    {\n                        cell: 'Default',\n                        searchable: true,\n                        dataIndex: 'beneficiary_surname',\n                        key: 'beneficiary_surname',\n                        title: 'Enrollee Last Name',\n                        search_key: 'user.first_name',\n                        sorter: (a,b) => a.beneficiary_surname.length - b.beneficiary_surname.length\n                    },\n                    {\n                        cell: 'Default',\n                        searchable: false,\n                        key: 'services_count',\n                        dataIndex: 'services_count',\n                        title: 'Service Quantity',\n                    },\n                    {\n                        cell: 'Default',\n                        searchable: false,\n                        key: 'visit_code',\n                        dataIndex: 'visit_code',\n                        title: 'Visit Code',\n                    },\n                    {\n                        cell: 'Default',\n                        searchable: false,\n                        key: 'visit_date',\n                        title: 'Visit Date',\n                        dataIndex: 'visit_date'\n                    },\n                    {\n                        key: 'status',\n                        title: 'Status',\n                        cell: 'Default',\n                        searchable: false,\n                        dataIndex: 'status'\n                    },\n                ]\n            }\n        }\n        if(this.props.match.params.type) {\n            let type = this.props.match.params.type;\n            page_name = (\n                <h4>PA Code :: {type.toUpperCase() === 'PREAUTH' ? 'Treated' : 'Referral'}</h4>\n            );\n\n\n            if(this.props.match.params.type){\n                let links;\n                if(type === \"preauth\") {\n                    links =(\n                        <React.Fragment>\n                            <Link style={{marginRight: '10px'}} className=\"btn btn-sm btn-danger pull-right\" to=\"/dashboard/services/preauth\">PA Requests</Link>\n                            <Link className=\"btn btn-sm btn-success pull-right\" to=\"/dashboard/services/refer\">Referral Requests</Link>\n                        </React.Fragment>\n                    )\n\n                    columns = [\n                        {\n                            cell: 'Default',\n                            searchable: true,\n                            dataIndex: 'provider_name',\n                            key: 'provider_name',\n                            title: 'Hospital Name',\n                            sorter: (a,b) => a.provider_name.length - b.provider_name.length\n                        },\n                        {\n                            cell: 'Default',\n                            dataIndex: 'beneficiary_first_name',\n                            searchable: true,\n                            key: 'beneficiary_first_name',\n                            title: 'First Name',\n                            sorter: (a,b) => a.beneficiary_first_name.length - b.beneficiary_first_name.length\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: true,\n                            dataIndex: 'beneficiary_surname',\n                            key: 'beneficiary_surname',\n                            title: 'Last Name',\n                            sorter: (a,b) => a.beneficiary_surname.length - b.beneficiary_surname.length\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: true,\n                            key: 'service_name',\n                            title: 'Service Name',\n                            dataIndex: 'service_name'\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'services_count',\n                            dataIndex: 'services_count',\n                            title: 'Service Qty',\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'authorization_code',\n                            title: 'Authorization Code',\n                            dataIndex: 'authorization_code'\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'visit_code',\n                            title: 'Visit Code',\n                            dataIndex: 'visit_code'\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'visit_date',\n                            title: 'Date',\n                            dataIndex: 'visit_date'\n                        },\n                        {\n                            key: 'status',\n                            title: 'Status',\n                            cell: 'Default',\n                            searchable: false,\n                            dataIndex: 'status'\n                        },\n                    ]\n                }\n\n                if(type === \"refer\") {\n                    links = (\n                        <React.Fragment>\n                            <Link style={{marginRight: '10px'}} className=\"btn btn-sm btn-success actionpull-right\" to=\"/dashboard/services/preauth\">PA Requests</Link>\n                            <Link className=\"btn btn-sm btn-danger pull-right\" to=\"/dashboard/services/refer\">Referral Requests</Link>  \n                        </React.Fragment>    \n                    );\n\n                    columns = [\n                        {\n                            cell: 'Default',\n                            searchable: true,\n                            key: 'provider_name',\n                            dataIndex: 'provider_name',\n                            title: 'Hospital Name',\n                            sorter: (a,b) => a.provider_name.length - b.provider_name.length\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: true,\n                            dataIndex: 'beneficiary_first_name',\n                            key: 'beneficiary_first_name',\n                            title: 'First Name',\n                            sorter: (a,b) => a.beneficiary_first_name.length - b.beneficiary_first_name.length\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: true,\n                            dataIndex: 'beneficiary_surname',\n                            key: 'beneficiary_surname',\n                            title: 'Last Name',\n                            sorter: (a,b) => a.beneficiary_surname.length - b.beneficiary_surname.length\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: true,\n                            key: 'service_name',\n                            dataIndex: 'service_name',\n                            title: 'Service Name',\n                            sorter: (a,b) => a.service_name.length - b.service_name.length\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'services_count',\n                            dataIndex: 'services_count',\n                            title: 'Service Qty',\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'referral_code',\n                            dataIndex: 'referral_code',\n                            title: 'Referral Code',\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'visit_code',\n                            dataIndex: 'visit_code',\n                            title: 'Visit Code',\n                        },\n                        {\n                            cell: 'Default',\n                            searchable: false,\n                            key: 'visit_date',\n                            dataIndex: 'visit_date',\n                            title: 'Date',\n                        },\n                        {\n                            key: 'status',\n                            title: 'Status',\n                            cell: 'Default',\n                            dataIndex: 'status',\n                            searchable: false,\n                        },\n                    ]\n                }\n                actionButtons = (\n                    <div>{links}</div>\n                );\n            }\n        }\n\n        let DatatableList;\n        if (active.role.name === \"PROVIDER_ADMIN\" || active.role.name === \"PROVIDER_MODERATOR\" ||\n            active.role.name === \"AGENT_ADMIN\" || active.role.name === \"AGENT_MODERATOR\" ||\n            active.role.name === \"HMO_ADMIN\" || active.role.name === \"HMO_MODERATOR\") {\n            let url;\n            if(this.props.match.params.claims) url = \"/dashboard/visitaion_\";\n            else url = \"/dashboard/visitaion_\"\n            actions = [\n                {\n                    key: \"treatment_id\",\n                    type: \"view\",\n                    title: \"View\",\n                    url: url\n                }\n            ];\n        }\n        if(this.state.query_string){\n            let query = this.state.query_string;\n            DatatableList = (\n                <Datatable\n                    hideSearch\n                    columns={columns}\n                    url={`treatment-service/index/${active.id}?${query}`}\n                    actions={actions}\n                />\n            )\n        }\n\n        let breadcrumb_url = `/dashboard/services/${this.props.match.params.type}`;\n        let breadcrumb_name = `Encounter Services (${this.props.match.params.type === 'preauth' ? 'Treated' : 'Referred'})`;\n\n\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>  \n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Breadcrumb links={[\n                                        {\n                                            url: '/dashboard/insurance',\n                                            name: 'Insurance'\n                                        },\n                                        {\n                                            url: `${breadcrumb_url}`,\n                                            name: `${breadcrumb_name}`\n                                        },\n                                    ]} />\n                                </div>\n                            </div><hr/>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <Card style={{width: '100%'}}>\n                                        <div className=\"row\" style={{marginBottom: '30px'}}>\n                                            <div className=\"col-md-6\">{ page_name }</div>\n                                            <div className=\"col-md-6 text-right\"> { actionButtons }</div>\n                                        </div>\n                                        <div>\n                                            {DatatableList}\n                                        </div>\n                                    </Card>\n                                </div>\n                            </div>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    active: state.ChoseRoleReducer.role\n});\n\nexport default connect(mapStateToProps, null)(ReferralAll);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Breadcrumb.component_container__2V5_E\",\"item\":\"Breadcrumb.component_item__ZqqpH\",\"itemTwo\":\"Breadcrumb.component_itemTwo__1JtzI\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport styles from './Breadcrumb.component.module.css';\n\nconst Breadcrumb = props => {\n    let links = props.links.map(link => (\n        <Link to={link.url} className={[styles.item, styles.itemTwo].join(\" \")} key={link.url}> > {link.name}</Link>\n    ));\n\n    return (\n        <div className={'card-body bg-light '} >\n            <Link className={styles.item} to=\"/chose_role\">Dashboard</Link>\n            {links}\n        </div>\n    )\n}\n\nBreadcrumb.defaultProps = {\n    links: []\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.ChoseRoleReducer.role\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Breadcrumb));","export { default } from './Breadcrumb.component';","import React from 'react';\nimport CustomInput from '../CustomInput';\nimport { Field, reduxForm } from 'redux-form';\n// import { requiredValidator } from '../../../shared/utils/validation';\n\n\nconst SearchForm = props => {\n\n    const { onChangeHandler } = props\n\n    const onNameChanged = event => {\n        onChangeHandler(event.target.value);\n    }\n\n    return (\n        <form>\n            <Field\n                name=\"value\"\n                component={CustomInput}\n                type=\"text\"\n                placeholder=\"Search\"\n                validate={[]}\n                onChange={onNameChanged}\n            />\n        </form>\n    )\n\n}\n\nexport default reduxForm({\n    form: 'SearchForm'\n})(SearchForm);","import styled from 'styled-components';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst DatatableStyleWrapper = styled.div`\n  \n  .pagination {\n    margin-top: 25px !important;\n  }\n\n  .pagination span {\n    cursor: pointer;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n  }\n\n  .pagination span.active {\n    background-color: #15974b;\n    color: white;\n    border: 1px solid #15974b;\n  }\n\n.center {\n  text-align: center;\n}\n.actions {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n}\n.actions2 {\n  width: 50%;\n  margin: 15px auto;\n}\n\n.action {\n    opacity: 1;\n    display: block;\n    font-size: 12px;\n    cursor: pointer;\n    padding: 10px 10px;\n\n    color: #FFFFFF;\n    border-radius: 5px;\n    letter-spacing: 0.29px;\n    transition: all 0.3s ease 0s;\n    border: 1px solid transparent;\n\n    margin-bottom: 15px;\n}\n.delete {\n  opacity: .8;\n  background: #e43829;\n}\n.edit {\n  opacity: .8;\n  background: #ffca28;\n}\n.view {\n  opacity: .8;\n  background: #15974b;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 5px 5px;\n  /* background: #eceeef; */\n  margin-bottom: 15px;\n}\n.field,\n.comparison {\n  width: 14%;\n}\n.form {\n  width: 30%;\n}\n.filter {\n  width: 10%;\n}\n.button {\n  width: 100%;\n  display: block;\n  background: #eceeef;\n  padding: 5px 5px;\n  border-radius: 5px;\n  text-align: center;\n  margin-top: 7px;\n}\n\n`;\n\nexport default WithDirection(DatatableStyleWrapper);\n","import React from 'react';\nimport swal from 'sweetalert';\nimport { Table, Tag } from 'antd';\n// import Filter from './Filter.component';\nimport { withRouter } from 'react-router-dom';\nimport SearchForm from './SearchForm.component';\nimport customswal from '@sweetalert/with-react';\nimport { getStorage } from '../../shared/utils/storage';\nimport { url } from './../../config';\n\nimport DatatableStyleWrapper from './Datatable.style';\n\nclass Datatable extends React.Component {\n\n    state = {\n        data: [],\n        per_page: 20,\n        last_page: 0,\n        loading: true,\n        total_pages: 0,\n        current_page: 0,\n        active_data: null,\n        show_actions: false,\n        query: ''\n    };\n\n    get = async end_point => {\n        let token = await getStorage('ohis:auth_token');\n\n        return fetch(url + end_point, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"AuthorizationHeader\": \"Bearer OSUN_1234567890987654321\",\n                'AuthToken': token\n            },\n        });\n    }\n\n    handleSearch = async value => {\n        let searchable = this.props.columns.filter(column => column.searchable).map(column => column.search_key).join(\"*\");\n        let query = `${searchable}:${value}`;\n\n        let response = await this.get(`${this.props.url}?search=${query}`);\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    detectQueryString = (url) => {\n        // get the current URL\n\n        // regex pattern for detecting ? character\n        var pattern = new RegExp(/\\?.+=.*/g);\n\n        return pattern.test(url);\n    }\n\n    fetchData = async (url, page_number) => {\n        let request;\n        this.setState({ loading: true });\n        if (this.detectQueryString(url)) request = this.get(`${url}&page=${page_number}`);\n        else request = this.get(`${url}?page=${page_number}`);\n        //make http request\n        let response = await request;\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    reset = data => {\n        let newData, total_pages, last_page, current_page;\n        let tableData = [];\n        \n        if (data.data) {\n            newData = data.data.map(data => {\n                data['is_selected'] = false;\n                return data;\n            });\n            newData.map((table,index) => {\n                table['key'] = table.id\n                tableData.push(table);\n            });\n            total_pages = data.meta.total;\n            last_page = data.meta.last_page;\n            current_page = data.meta.current_page;\n        } else {\n            newData = [];\n            total_pages = 0;\n            last_page = 0;\n            current_page = 0;\n        }\n\n        this.setState({\n            data: tableData,\n            loading: false,\n            total_pages: total_pages,\n            last_page: last_page,\n            current_page: current_page\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData(this.props.url, 1);\n    }\n\n    getPaginated = page_number => {\n        this.fetchData(this.props.url, page_number);\n    }\n\n    selected = row => {\n        console.log(JSON.stringify(row));\n        let tableData = [];\n        let newData = this.state.data.map(data => {\n            data['is_selected'] = false;\n\n            if (row.id === data.id) {\n                data['is_selected'] = true;\n            }\n\n            return data;\n        });\n\n        newData.map((table,index) => {\n            table['key'] = table.id\n            tableData.push(table);\n        });\n\n        this.setState({\n            data: tableData,\n            active_data: row,\n            show_actions: true\n        }, async () => {\n            if (this.props.actions.length) {\n                let actions = this.props.actions.map((action, index) => {\n\n                    let classes = `action delete`;\n\n                    if (action.type === 'edit') {\n                        classes = `action edit`;\n                    }\n\n                    if (action.type === 'view') {\n                        classes = `action view`;\n                    }\n\n\n                    return (\n                        <div key={index} className={classes} onClick={() => this.handle(action)}>\n                            {action.title}\n                        </div>\n                    )\n                });\n\n                customswal({\n                    content: (\n                        <div>\n                            <h1>Action List(s)</h1>\n                            <div className=\"actions2\">\n                                {actions}\n                            </div>\n                        </div>\n                    ),\n                    buttons: false,\n                });\n            }\n        });\n    }\n\n    delete = async (key, url) => {\n        //set is deleting status on the particular table\n        // let newData = data.data.map(data => {\n        //     data['is_selected'] = false;\n        //     return data;\n        // });\n        // this.setState({\n        //     data: newData,\n        // });\n\n        let param = this.state.active_data[key];\n\n        let response = await this.get(`${url}${param}`);\n        const data = await response.json();\n\n\n        if (data.status === 200) {\n            let newData = [...this.state.data].filter(data => {\n                return param !== data[key]\n            });\n\n            this.setState({\n                data: newData,\n            });\n        }\n    }\n\n    handle = async ({ type, url, key }) => {\n        let alert = await swal({\n            title: `Are you sure you want to ${type}`,\n            type: 'warning',\n            buttons: [\n                'No',\n                'Yes, I am sure!'\n            ],\n        });\n        if (alert) {\n            if (type === 'delete') {\n                this.delete(key, url);\n            }\n            //edit\n            if (type === 'edit') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n            if (type === 'view') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n        }\n    }\n\n    tableList = () => {\n        let values = [];\n\n        if (this.state.data.length) {\n            return this.state.data.map(row => {\n                let icon = <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n\n                if (row.is_selected) {\n                    icon = <i className=\"fa fa-circle\" aria-hidden=\"true\"></i>\n                }\n\n                return (\n                    <tr key={row.id} onClick={() => this.selected(row)}>\n                        <td>{icon}</td>\n                        {this.props.columns.map(col =>\n                            <td key={col.key}>\n                                {row[col.key]}\n                            </td>\n                        )}\n                    </tr>\n                )\n            });\n        }\n\n        let container = (\n            <tr>\n                <td colSpan={this.props.columns.length + 1} className=\"center\">No Records Found.</td>\n            </tr>\n        )\n\n        if (this.state.loading) {\n            container = (\n                <tr>\n                    <td colSpan={this.props.columns.length + 1} className=\"center\">Slow network, Loading...</td>\n                </tr>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                {container}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(this.state.total_pages / this.state.per_page); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let classes = this.state.current_page === number ? 'active' : '';\n\n            if (number == 1 || number == this.state.total_pages || (number >= this.state.current_page - 2 && number <= this.state.current_page + 2)) {\n                return (\n                    <span key={number} className={classes} onClick={() => this.getPaginated(number)}>{number}</span>\n                );\n            }\n        });\n\n        let searchForm;\n\n        if (!this.props.hideSearch) {\n            searchForm = (\n                <SearchForm onChangeHandler={this.handleSearch} />\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <DatatableStyleWrapper className=\"iosDatatableWrapper\">\n                    {searchForm}\n                    <Table \n                        onRow={(record, rowIndex) => {\n                            return {\n                                onClick: event => {this.selected(record)},\n                            };\n                        }}                \n                        columns={this.props.columns} \n                        dataSource={this.state.data} \n                        pagination={false}\n                    />\n                    \n                    {/* <table className={['table', 'table-striped', 'table-hover'].join(' ')}>\n                        <thead>\n                            <tr>\n                            <th></th>\n                            {this.props.columns.map((column, index) => <th key={index}>{column.title}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.tableList()}\n                        </tbody>\n                    </table> */}\n                    <div className=\"pagination\">\n                        <span onClick={() => this.getPaginated(1)}>&laquo;</span>\n                        {renderPageNumbers}\n                        <span onClick={() => this.getPaginated(this.props.last_page)}>&raquo;</span>\n                    </div>\n                </DatatableStyleWrapper>\n            </React.Fragment>\n        );\n    };\n}\n\nDatatable.defaultProps = {\n    hideSearch: false\n}\n\nexport default withRouter(Datatable);","export { default } from './Datatable.component';"],"sourceRoot":""}