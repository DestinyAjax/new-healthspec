{"version":3,"sources":["pages/Service/Edit/ServiceEdit.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Breadcrumb/Breadcrumb.component.module.css","ui/Breadcrumb/Breadcrumb.component.js","ui/Breadcrumb/index.js","ui/forms/ServiceForm/ServiceForm.component.module.css","ui/forms/ServiceForm/ServiceForm.component.js","ui/forms/ServiceForm/index.js"],"names":["ServiceEdit","state","submittingForm","handleSubmit","formData","setState","props","match","params","slug","updateService","showNotification","a","async","status","swal","title","text","service","name","icon","closeOnClickOutside","resetUpdateService","history","push","nextProps","this","getService","formContainer","get_service_status","is_active_unformatted","Fragment","btnText","plans","onSubmit","initialValues","className","active","role","to","type","style","width","Component","connect","ServiceReducer","update_service_status","dispatch","payload","LayoutContentStyle","styled","div","palette","module","exports","Breadcrumb","links","map","link","url","styles","item","itemTwo","join","key","defaultProps","withRouter","ChoseRoleReducer","ServiceForm","Field","component","CustomInput","label","validate","requiredValidator","CustomSelect","options","displayValue","value","buttonContainer","button","CustomButton","disabled","invalid","pristine","React","reduxForm","form"],"mappings":"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","file":"static/js/51.dd177121.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport {Card} from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../../containers/Dashboard/Dashboard';\nimport Breadcrumb from \"../../../ui/Breadcrumb\";\nimport Loader from '../../../ui/Loader/Loader.Component';\nimport ServiceForm from '../../../ui/forms/ServiceForm';\nimport { updateService, resetUpdateService, getService } from '../../../shared/actions/Service.action';\n\nclass ServiceEdit extends Component {\n\n    state = {\n        submittingForm: false,\n    }\n\n    handleSubmit = formData => {\n        this.setState({\n            submittingForm: true\n        }, () => {\n            formData['slug'] = this.props.match.params.slug;\n            this.props.updateService(formData);\n        });\n    }\n\n\n    showNotification = async props => {\n        if (props.status === 200) {\n            this.setState({\n                submittingForm: false\n            });\n\n            let alert = await swal({\n                title: \"Good job!\",\n                text: `${props.service.name} was created successfully!`,\n                icon: \"success\",\n                closeOnClickOutside: false\n            });\n\n            if (alert) {\n                this.props.resetUpdateService();\n                this.props.history.push('/service_all');\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.showNotification(nextProps);\n    }\n\n\n    componentDidMount() {\n        this.props.getService(this.props.match.params.slug);\n    }\n\n\n    componentWillUnmount() {\n        this.props.resetUpdateService();\n    }\n\n    render() {\n\n        let formContainer;\n\n        if (this.props.get_service_status === 200) {\n            let service = this.props.service;\n            service['is_active'] = this.props.service.is_active_unformatted;\n\n            formContainer = (\n                <React.Fragment>\n                    <ServiceForm\n                        btnText=\"Update\"\n                        plans={this.props.plans}\n                        onSubmit={this.handleSubmit}\n                        submittingForm={this.state.submittingForm}\n                        initialValues={service}\n                    />  \n                </React.Fragment>\n            )\n        }\n\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>  \n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4>Edit Services</h4>\n                                </div>\n                                {this.props.active.role.name === \"ADMIN\" && (\n                                    <div className=\"col-md-6 text-right\">\n                                        <Link className=\"\" to=\"/dashboard/service_all\">\n                                            <button className=\"btn btn-sm btn-success\" type=\"button\">All Services</button>\n                                        </Link>\n                                    </div>\n                                )}\n                            </div><hr/>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Card title=\"Create A Service\" style={{width: '100%'}}>\n                                        {formContainer}\n                                    </Card>\n                                </div>\n                            </div>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    service: state.ServiceReducer.service,\n    status: state.ServiceReducer.update_service_status,\n    get_service_status: state.ServiceReducer.get_service_status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getService: payload => dispatch( getService(payload) ),\n    resetUpdateService: () => dispatch(resetUpdateService()),\n    updateService: payload => dispatch(updateService(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEdit);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Breadcrumb.component_container__2V5_E\",\"item\":\"Breadcrumb.component_item__ZqqpH\",\"itemTwo\":\"Breadcrumb.component_itemTwo__1JtzI\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport styles from './Breadcrumb.component.module.css';\n\nconst Breadcrumb = props => {\n    let links = props.links.map(link => (\n        <Link to={link.url} className={[styles.item, styles.itemTwo].join(\" \")} key={link.url}> > {link.name}</Link>\n    ));\n\n    return (\n        <div className={'card-body bg-light '} >\n            <Link className={styles.item} to=\"/chose_role\">Dashboard</Link>\n            {links}\n        </div>\n    )\n}\n\nBreadcrumb.defaultProps = {\n    links: []\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.ChoseRoleReducer.role\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Breadcrumb));","export { default } from './Breadcrumb.component';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ServiceForm.component_formContainer__1MF-w\",\"inlineGroup\":\"ServiceForm.component_inlineGroup__1E6aU\",\"formGroup\":\"ServiceForm.component_formGroup__1Ii3y\",\"buttonContainer\":\"ServiceForm.component_buttonContainer__2sdBL\",\"button\":\"ServiceForm.component_button__1IoHW\"};","import React from 'react';\nimport CustomInput from '../../CustomInput';\nimport CustomSelect from '../../CustomSelect';\nimport CustomButton from '../../CustomButton';\nimport { Field, reduxForm } from 'redux-form';\nimport styles from './ServiceForm.component.module.css';\nimport { requiredValidator } from '../../../shared/utils/validation';\n\nclass ServiceForm extends React.Component {\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"name\"\n                            component={CustomInput}\n                            type=\"text\"\n                            label=\"Name\"\n                            validate={[requiredValidator]}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"type\"\n                            component={CustomSelect}\n                            label=\"Type\"\n                            validate={[requiredValidator]}\n                            options={[\n                                {\n                                    displayValue: 'Primary',\n                                    value: 'P'\n                                },\n                                {\n                                    displayValue: 'Secondary',\n                                    value: 'S'\n                                },\n                                {\n                                    displayValue: 'Partial Exclusion',\n                                    value: 'T'\n                                },\n                                {\n                                    displayValue: 'Diagnosis',\n                                    value: 'D'\n                                },\n                            ]}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"service_category\"\n                            component={CustomSelect}\n                            label=\"Category\"\n                            validate={[requiredValidator]}\n                            options={[\n                                {\n                                    displayValue: 'Diagnosis',\n                                    value: 'Diagnosis'\n                                },\n                                {\n                                    displayValue: 'Laboratory',\n                                    value: 'Laboratory'\n                                },\n                                {\n                                    displayValue: 'Surgery',\n                                    value: 'Surgery'\n                                },\n                                {\n                                    displayValue: 'Procedures',\n                                    value: 'Procedures'\n                                },\n                                {\n                                    displayValue: 'Radiology',\n                                    value: 'Radiology'\n                                },\n                                {\n                                    displayValue: 'Pharmacy (Drugs)',\n                                    value: 'Pharmacy'\n                                },\n                                {\n                                    displayValue: 'Inpatient',\n                                    value: 'Inpatient'\n                                },\n                                {\n                                    displayValue: 'Consumable',\n                                    value: 'Consumable'\n                                },\n                                {\n                                    displayValue: 'Random',\n                                    value: 'Random'\n                                },\n                                {\n                                    displayValue: 'Others',\n                                    value: 'Others'\n                                },\n                            ]}\n                        />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"price\"\n                            component={CustomInput}\n                            type=\"number\"\n                            label=\"Price\"\n                            validate={[requiredValidator]}\n                        />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"is_active\"\n                            component={CustomSelect}\n                            label=\"Status\"\n                            validate={[requiredValidator]}\n                            options={[\n                                {\n                                    displayValue: 'Active',\n                                    value: 1\n                                },\n                                {\n                                    displayValue: 'Inactive',\n                                    value: 0\n                                },\n                            ]}\n                        />\n                    </div>\n                </div><hr/>\n\n                <div className={styles.buttonContainer}>\n                    <div className={styles.button}>\n                        <CustomButton disabled={this.props.invalid || this.props.pristine} submittingForm={this.props.submittingForm}>{this.props.btnText}</CustomButton>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'ServiceForm'\n})(ServiceForm);","export { default } from './ServiceForm.component';"],"sourceRoot":""}