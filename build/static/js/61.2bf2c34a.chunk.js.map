{"version":3,"sources":["pages/Service/All/ServiceAll.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Breadcrumb/Breadcrumb.component.module.css","ui/Breadcrumb/Breadcrumb.component.js","ui/Breadcrumb/index.js","ui/Datatable/SearchForm.component.js","ui/Datatable/Datatable.style.js","ui/Datatable/Datatable.component.js","ui/Datatable/index.js"],"names":["ServiceAll","actions","this","props","active","role","name","key","type","title","url","links","className","to","columns","dataIndex","cell","searchable","search_key","sorter","a","b","length","Component","connect","state","ChoseRoleReducer","LayoutContentStyle","styled","div","palette","module","exports","Breadcrumb","map","link","styles","item","itemTwo","join","defaultProps","withRouter","reduxForm","form","onChangeHandler","Field","component","CustomInput","placeholder","validate","onChange","event","target","value","DatatableStyleWrapper","WithDirection","Datatable","data","per_page","last_page","loading","total_pages","current_page","active_data","show_actions","query","get","end_point","async","getStorage","token","fetch","method","headers","handleSearch","filter","column","response","json","reset","detectQueryString","RegExp","test","fetchData","page_number","setState","request","tableData","table","index","id","push","meta","total","getPaginated","selected","row","console","log","JSON","stringify","action","classes","onClick","handle","customswal","content","buttons","delete","param","status","newData","swal","history","tableList","icon","aria-hidden","is_selected","col","container","colSpan","Fragment","pageNumbers","i","Math","ceil","searchForm","renderPageNumbers","number","hideSearch","onRow","record","rowIndex","dataSource","pagination","React"],"mappings":"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","file":"static/js/61.2bf2c34a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../../containers/Dashboard/Dashboard';\nimport Breadcrumb from \"../../../ui/Breadcrumb\";\nimport Datatable from '../../../ui/Datatable';\nimport Loader from '../../../ui/Loader/Loader.Component';\n\nclass ServiceAll extends Component {\n    render() {\n\n        let actions = [];\n        let addNew, breadcrumb;\n\n        if (this.props.active.role.name === \"ADMIN\") {\n            actions = [\n                {\n                    key: \"slug\",\n                    type: \"delete\",\n                    title: \"Delete\",\n                    url: \"dashboard/service/delete/\"\n                },\n                {\n                    key: \"slug\",\n                    type: \"edit\",\n                    title: \"Edit\",\n                    url: \"dashboard/service_edit_\"\n                }\n            ];\n            breadcrumb = (\n                <Breadcrumb\n                    links={[\n                        {\n                            url: \"/dashboard/service_all\",\n                            name: \"All Services\"\n                        }\n                    ]}\n                />\n            )\n        }\n\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>  \n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4>All Services</h4>\n                                </div>\n                                {this.props.active.role.name === \"ADMIN\" && (\n                                    <div className=\"col-md-6 text-right\">\n                                        <Link className=\"\" to=\"/dashboard/service_add\">\n                                            <button className=\"btn btn-sm btn-success\" type=\"button\">Add Service</button>\n                                        </Link>\n                                    </div>\n                                )}\n                            </div><hr/>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <Datatable\n                                        columns={[\n                                            {\n                                                key: \"id\",\n                                                dataIndex: 'id',\n                                                title: \"ID\",\n                                                cell: \"Default\",\n                                                searchable: false\n                                            },\n                                            {\n                                                cell: \"Default\",\n                                                searchable: true,\n                                                key: \"name\",\n                                                title: \"Name\",\n                                                search_key: \"name\",\n                                                dataIndex: \"name\",\n                                                sorter: (a,b) => a.name.length - b.name.length\n                                            },\n                                            {\n                                                cell: \"Default\",\n                                                dataIndex: 'service_category',\n                                                searchable: true,\n                                                title: \"Category\",\n                                                key: \"service_category\",\n                                                search_key: \"service_category\"\n                                            },\n                                            {\n                                                title: 'Type',\n                                                cell: 'Default',\n                                                key: 'full_type',\n                                                searchable: false,\n                                                search_key: 'type',\n                                                dataIndex: 'full_type'\n                                            },\n                                            {\n                                                cell: \"Default\",\n                                                searchable: false,\n                                                key: \"price\",\n                                                title: \"Price\",\n                                                dataIndex: 'price'\n                                            }\n                                        ]}\n                                        url={`service/index`}\n                                        actions={actions}\n                                    />\n                                </div>\n                            </div>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    active: state.ChoseRoleReducer.role\n});\n\nexport default connect(mapStateToProps, null)(ServiceAll);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Breadcrumb.component_container__2V5_E\",\"item\":\"Breadcrumb.component_item__ZqqpH\",\"itemTwo\":\"Breadcrumb.component_itemTwo__1JtzI\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport styles from './Breadcrumb.component.module.css';\n\nconst Breadcrumb = props => {\n    let links = props.links.map(link => (\n        <Link to={link.url} className={[styles.item, styles.itemTwo].join(\" \")} key={link.url}> > {link.name}</Link>\n    ));\n\n    return (\n        <div className={'card-body bg-light '} >\n            <Link className={styles.item} to=\"/chose_role\">Dashboard</Link>\n            {links}\n        </div>\n    )\n}\n\nBreadcrumb.defaultProps = {\n    links: []\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.ChoseRoleReducer.role\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Breadcrumb));","export { default } from './Breadcrumb.component';","import React from 'react';\nimport CustomInput from '../CustomInput';\nimport { Field, reduxForm } from 'redux-form';\n// import { requiredValidator } from '../../../shared/utils/validation';\n\n\nconst SearchForm = props => {\n\n    const { onChangeHandler } = props\n\n    const onNameChanged = event => {\n        onChangeHandler(event.target.value);\n    }\n\n    return (\n        <form>\n            <Field\n                name=\"value\"\n                component={CustomInput}\n                type=\"text\"\n                placeholder=\"Search\"\n                validate={[]}\n                onChange={onNameChanged}\n            />\n        </form>\n    )\n\n}\n\nexport default reduxForm({\n    form: 'SearchForm'\n})(SearchForm);","import styled from 'styled-components';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst DatatableStyleWrapper = styled.div`\n  \n  .pagination {\n    margin-top: 25px !important;\n  }\n\n  .pagination span {\n    cursor: pointer;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n  }\n\n  .pagination span.active {\n    background-color: #15974b;\n    color: white;\n    border: 1px solid #15974b;\n  }\n\n.center {\n  text-align: center;\n}\n.actions {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n}\n.actions2 {\n  width: 50%;\n  margin: 15px auto;\n}\n\n.action {\n    opacity: 1;\n    display: block;\n    font-size: 12px;\n    cursor: pointer;\n    padding: 10px 10px;\n\n    color: #FFFFFF;\n    border-radius: 5px;\n    letter-spacing: 0.29px;\n    transition: all 0.3s ease 0s;\n    border: 1px solid transparent;\n\n    margin-bottom: 15px;\n}\n.delete {\n  opacity: .8;\n  background: #e43829;\n}\n.edit {\n  opacity: .8;\n  background: #ffca28;\n}\n.view {\n  opacity: .8;\n  background: #15974b;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 5px 5px;\n  /* background: #eceeef; */\n  margin-bottom: 15px;\n}\n.field,\n.comparison {\n  width: 14%;\n}\n.form {\n  width: 30%;\n}\n.filter {\n  width: 10%;\n}\n.button {\n  width: 100%;\n  display: block;\n  background: #eceeef;\n  padding: 5px 5px;\n  border-radius: 5px;\n  text-align: center;\n  margin-top: 7px;\n}\n\n`;\n\nexport default WithDirection(DatatableStyleWrapper);\n","import React from 'react';\nimport swal from 'sweetalert';\nimport { Table, Tag } from 'antd';\n// import Filter from './Filter.component';\nimport { withRouter } from 'react-router-dom';\nimport SearchForm from './SearchForm.component';\nimport customswal from '@sweetalert/with-react';\nimport { getStorage } from '../../shared/utils/storage';\nimport { url } from './../../config';\n\nimport DatatableStyleWrapper from './Datatable.style';\n\nclass Datatable extends React.Component {\n\n    state = {\n        data: [],\n        per_page: 20,\n        last_page: 0,\n        loading: true,\n        total_pages: 0,\n        current_page: 0,\n        active_data: null,\n        show_actions: false,\n        query: ''\n    };\n\n    get = async end_point => {\n        let token = await getStorage('ohis:auth_token');\n\n        return fetch(url + end_point, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"AuthorizationHeader\": \"Bearer OSUN_1234567890987654321\",\n                'AuthToken': token\n            },\n        });\n    }\n\n    handleSearch = async value => {\n        let searchable = this.props.columns.filter(column => column.searchable).map(column => column.search_key).join(\"*\");\n        let query = `${searchable}:${value}`;\n\n        let response = await this.get(`${this.props.url}?search=${query}`);\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    detectQueryString = (url) => {\n        // get the current URL\n\n        // regex pattern for detecting ? character\n        var pattern = new RegExp(/\\?.+=.*/g);\n\n        return pattern.test(url);\n    }\n\n    fetchData = async (url, page_number) => {\n        let request;\n        this.setState({ loading: true });\n        if (this.detectQueryString(url)) request = this.get(`${url}&page=${page_number}`);\n        else request = this.get(`${url}?page=${page_number}`);\n        //make http request\n        let response = await request;\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    reset = data => {\n        let newData, total_pages, last_page, current_page;\n        let tableData = [];\n        \n        if (data.data) {\n            newData = data.data.map(data => {\n                data['is_selected'] = false;\n                return data;\n            });\n            newData.map((table,index) => {\n                table['key'] = table.id\n                tableData.push(table);\n            });\n            total_pages = data.meta.total;\n            last_page = data.meta.last_page;\n            current_page = data.meta.current_page;\n        } else {\n            newData = [];\n            total_pages = 0;\n            last_page = 0;\n            current_page = 0;\n        }\n\n        this.setState({\n            data: tableData,\n            loading: false,\n            total_pages: total_pages,\n            last_page: last_page,\n            current_page: current_page\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData(this.props.url, 1);\n    }\n\n    getPaginated = page_number => {\n        this.fetchData(this.props.url, page_number);\n    }\n\n    selected = row => {\n        console.log(JSON.stringify(row));\n        let tableData = [];\n        let newData = this.state.data.map(data => {\n            data['is_selected'] = false;\n\n            if (row.id === data.id) {\n                data['is_selected'] = true;\n            }\n\n            return data;\n        });\n\n        newData.map((table,index) => {\n            table['key'] = table.id\n            tableData.push(table);\n        });\n\n        this.setState({\n            data: tableData,\n            active_data: row,\n            show_actions: true\n        }, async () => {\n            if (this.props.actions.length) {\n                let actions = this.props.actions.map((action, index) => {\n\n                    let classes = `action delete`;\n\n                    if (action.type === 'edit') {\n                        classes = `action edit`;\n                    }\n\n                    if (action.type === 'view') {\n                        classes = `action view`;\n                    }\n\n\n                    return (\n                        <div key={index} className={classes} onClick={() => this.handle(action)}>\n                            {action.title}\n                        </div>\n                    )\n                });\n\n                customswal({\n                    content: (\n                        <div>\n                            <h1>Action List(s)</h1>\n                            <div className=\"actions2\">\n                                {actions}\n                            </div>\n                        </div>\n                    ),\n                    buttons: false,\n                });\n            }\n        });\n    }\n\n    delete = async (key, url) => {\n        //set is deleting status on the particular table\n        // let newData = data.data.map(data => {\n        //     data['is_selected'] = false;\n        //     return data;\n        // });\n        // this.setState({\n        //     data: newData,\n        // });\n\n        let param = this.state.active_data[key];\n\n        let response = await this.get(`${url}${param}`);\n        const data = await response.json();\n\n\n        if (data.status === 200) {\n            let newData = [...this.state.data].filter(data => {\n                return param !== data[key]\n            });\n\n            this.setState({\n                data: newData,\n            });\n        }\n    }\n\n    handle = async ({ type, url, key }) => {\n        let alert = await swal({\n            title: `Are you sure you want to ${type}`,\n            type: 'warning',\n            buttons: [\n                'No',\n                'Yes, I am sure!'\n            ],\n        });\n        if (alert) {\n            if (type === 'delete') {\n                this.delete(key, url);\n            }\n            //edit\n            if (type === 'edit') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n            if (type === 'view') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n        }\n    }\n\n    tableList = () => {\n        let values = [];\n\n        if (this.state.data.length) {\n            return this.state.data.map(row => {\n                let icon = <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n\n                if (row.is_selected) {\n                    icon = <i className=\"fa fa-circle\" aria-hidden=\"true\"></i>\n                }\n\n                return (\n                    <tr key={row.id} onClick={() => this.selected(row)}>\n                        <td>{icon}</td>\n                        {this.props.columns.map(col =>\n                            <td key={col.key}>\n                                {row[col.key]}\n                            </td>\n                        )}\n                    </tr>\n                )\n            });\n        }\n\n        let container = (\n            <tr>\n                <td colSpan={this.props.columns.length + 1} className=\"center\">No Records Found.</td>\n            </tr>\n        )\n\n        if (this.state.loading) {\n            container = (\n                <tr>\n                    <td colSpan={this.props.columns.length + 1} className=\"center\">Slow network, Loading...</td>\n                </tr>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                {container}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(this.state.total_pages / this.state.per_page); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let classes = this.state.current_page === number ? 'active' : '';\n\n            if (number == 1 || number == this.state.total_pages || (number >= this.state.current_page - 2 && number <= this.state.current_page + 2)) {\n                return (\n                    <span key={number} className={classes} onClick={() => this.getPaginated(number)}>{number}</span>\n                );\n            }\n        });\n\n        let searchForm;\n\n        if (!this.props.hideSearch) {\n            searchForm = (\n                <SearchForm onChangeHandler={this.handleSearch} />\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <DatatableStyleWrapper className=\"iosDatatableWrapper\">\n                    {searchForm}\n                    <Table \n                        onRow={(record, rowIndex) => {\n                            return {\n                                onClick: event => {this.selected(record)},\n                            };\n                        }}                \n                        columns={this.props.columns} \n                        dataSource={this.state.data} \n                        pagination={false}\n                    />\n                    \n                    {/* <table className={['table', 'table-striped', 'table-hover'].join(' ')}>\n                        <thead>\n                            <tr>\n                            <th></th>\n                            {this.props.columns.map((column, index) => <th key={index}>{column.title}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.tableList()}\n                        </tbody>\n                    </table> */}\n                    <div className=\"pagination\">\n                        <span onClick={() => this.getPaginated(1)}>&laquo;</span>\n                        {renderPageNumbers}\n                        <span onClick={() => this.getPaginated(this.props.last_page)}>&raquo;</span>\n                    </div>\n                </DatatableStyleWrapper>\n            </React.Fragment>\n        );\n    };\n}\n\nDatatable.defaultProps = {\n    hideSearch: false\n}\n\nexport default withRouter(Datatable);","export { default } from './Datatable.component';"],"sourceRoot":""}