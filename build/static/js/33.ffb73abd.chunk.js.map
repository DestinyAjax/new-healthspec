{"version":3,"sources":["pages/Policy/Edit/PolicyEdit.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Breadcrumb/Breadcrumb.component.module.css","ui/Breadcrumb/Breadcrumb.component.js","ui/Breadcrumb/index.js","ui/Spinner/Spinner.component.module.css","ui/Spinner/Spinner.component.js","ui/Spinner/index.js","ui/forms/PolicyForm/PolicyForm.component.module.css","ui/forms/PolicyForm/PolicyForm.component.js","ui/forms/PolicyForm/index.js"],"names":["PolicyAdd","state","submittingForm","handleSubmit","formData","setState","props","match","params","slug","updatePolicy","showNotification","a","async","status","swal","title","text","policy","name","icon","closeOnClickOutside","resetUpdatePolicy","history","push","this","getPlans","getAllType","getPolicy","nextProps","formContainer","get_plan_status","get_organization_profiles_status","get_policy_status","is_active_unformatted","Fragment","className","btnText","plans","onSubmit","initialValues","to","type","Component","connect","PlanReducer","get_plans_status","get_plan_message","get_plans_message","organization_profiles","OrganizationProfileReducer","PolicyReducer","update_policy_status","dispatch","payload","LayoutContentStyle","styled","div","palette","module","exports","Breadcrumb","links","map","link","url","styles","item","itemTwo","join","key","defaultProps","withRouter","active","ChoseRoleReducer","role","Spinner","message","container","content","reduxForm","form","pristine","invalid","companies","style","width","Field","component","CustomInput","compulsory","label","validate","requiredValidator","CustomSelect","options","plan","value","id","displayValue","buttonContainer","button","CustomButton","disabled"],"mappings":"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","file":"static/js/33.ffb73abd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport Spinner from '../../../ui/Spinner';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../../containers/Dashboard/Dashboard';\nimport Breadcrumb from \"../../../ui/Breadcrumb\";\nimport Loader from '../../../ui/Loader/Loader.Component';\nimport PolicyForm from '../../../ui/forms/PolicyForm';\nimport { getPlans } from '../../../shared/actions/Plan.action';\nimport { getAllType } from '../../../shared/actions/OrganizationProfile.action';\nimport { getPolicy, updatePolicy, resetUpdatePolicy } from '../../../shared/actions/Policy.action';\n\nclass PolicyAdd extends Component {\n\n    state = {\n        submittingForm: false,\n    }\n\n    componentDidMount() {\n        this.props.getPlans();\n        this.props.getAllType(3);\n        this.props.getPolicy(this.props.match.params.slug);\n    }\n\n    handleSubmit = formData => {\n        this.setState({\n            submittingForm: true\n        }, () => {\n            formData['slug'] = this.props.match.params.slug;\n            this.props.updatePolicy(formData);\n        });\n    }\n\n    showNotification = async props => {\n        if (props.status === 200) {\n            this.setState({\n                submittingForm: false\n            });\n\n            let alert = await swal({\n                title: \"Good job!\",\n                text: `${props.policy.name} was updated successfully!`,\n                icon: \"success\",\n                closeOnClickOutside: false\n            });\n\n            if (alert) {\n                this.props.resetUpdatePolicy();\n                this.props.history.push('/policy_all');\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.showNotification(nextProps);\n    }\n\n    componentWillUnmount() {\n        this.props.resetUpdatePolicy();\n    }\n\n    render() {\n\n        let formContainer = <Spinner />\n\n        if (this.props.get_plan_status === 200 && this.props.get_organization_profiles_status === 200 && this.props.get_policy_status === 200) {\n\n            let policy = this.props.policy;\n            policy['is_active'] = this.props.policy.is_active_unformatted;\n\n            formContainer = (\n                <React.Fragment>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\"> \n                            <PolicyForm\n                                btnText=\"Update\"\n                                plans={this.props.plans}\n                                onSubmit={this.handleSubmit}\n                                initialValues={policy}\n                                submittingForm={this.state.submittingForm}\n                            />  \n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>  \n                            <React.Fragment>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4>Create a Policy</h4>\n                                    </div>\n                                    <div className=\"col-md-6 text-right\">\n                                        <Link className=\"\" to=\"/dashboard/policy_all\">\n                                            <button className=\"btn btn-sm btn-success\" type=\"button\">All Policies</button>\n                                        </Link>\n                                    </div> \n                                </div><hr/>\n                                {formContainer}\n                            </React.Fragment>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    plans: state.PlanReducer.plans,\n    get_plan_status: state.PlanReducer.get_plans_status,\n    get_plan_message: state.PlanReducer.get_plans_message,\n    organization_profiles: state.OrganizationProfileReducer.organization_profiles,\n    get_organization_profiles_status: state.OrganizationProfileReducer.get_organization_profiles_status,\n    policy: state.PolicyReducer.policy,\n    status: state.PolicyReducer.update_policy_status,\n    get_policy_status: state.PolicyReducer.get_policy_status\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getPlans: () => dispatch( getPlans() ),\n    getAllType: payload => dispatch( getAllType(payload) ),\n    resetUpdatePolicy: () => dispatch( resetUpdatePolicy() ),\n    updatePolicy: payload => dispatch( updatePolicy(payload) ),\n    getPolicy: payload => dispatch( getPolicy(payload) )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PolicyAdd);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Breadcrumb.component_container__2V5_E\",\"item\":\"Breadcrumb.component_item__ZqqpH\",\"itemTwo\":\"Breadcrumb.component_itemTwo__1JtzI\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport styles from './Breadcrumb.component.module.css';\n\nconst Breadcrumb = props => {\n    let links = props.links.map(link => (\n        <Link to={link.url} className={[styles.item, styles.itemTwo].join(\" \")} key={link.url}> > {link.name}</Link>\n    ));\n\n    return (\n        <div className={'card-body bg-light '} >\n            <Link className={styles.item} to=\"/chose_role\">Dashboard</Link>\n            {links}\n        </div>\n    )\n}\n\nBreadcrumb.defaultProps = {\n    links: []\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.ChoseRoleReducer.role\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Breadcrumb));","export { default } from './Breadcrumb.component';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spinner.component_container__W-GWN\",\"content\":\"Spinner.component_content__11MBV\",\"message\":\"Spinner.component_message__3kFxw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Spinner.component.module.css';\n\nconst Spinner = ({message}) => (\n\t<div className={styles.container}>\n\t\t<div className={styles.content}>\n\t\t\t<i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\n\t\t\t<div className={styles.message}>\n\t\t\t\t{message}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\n\nSpinner.defaultProps = {\n\tmessage: 'Loading'\n};\n\nexport default Spinner;","export { default } from './Spinner.component.js';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"PolicyForm.component_formContainer__iItTv\",\"inlineGroup\":\"PolicyForm.component_inlineGroup__1EdKm\",\"formGroup\":\"PolicyForm.component_formGroup__2gZuB\",\"buttonContainer\":\"PolicyForm.component_buttonContainer__3VJ2K\",\"button\":\"PolicyForm.component_button__G93d2\"};","import React from 'react';\nimport {Card} from 'antd';\nimport CustomInput from '../../CustomInput';\nimport CustomSelect from '../../CustomSelect';\nimport CustomButton from '../../CustomButton';\nimport { Field, reduxForm } from 'redux-form';\nimport styles from './PolicyForm.component.module.css';\nimport { requiredValidator } from '../../../shared/utils/validation';\n\nconst PolicyForm = ({ handleSubmit, pristine, invalid, btnText, companies, plans, submittingForm}) => {\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <Card style={{width: '100%'}}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"name\"\n                            component={CustomInput}\n                            compulsory={true}\n                            type=\"text\"\n                            label=\"Name\"\n                            validate={[requiredValidator]}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"price\"\n                            component={CustomInput}\n                            compulsory={true}\n                            type=\"number\"\n                            label=\"Price\"\n                            validate={[requiredValidator]}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"maximum_no_of_beneficiary\"\n                            component={CustomInput}\n                            compulsory={true}\n                            type=\"number\"\n                            label=\"Maximum number of enrollee\"\n                            validate={[requiredValidator]}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"maximum_no_of_beneficiary_dependant\"\n                            component={CustomInput}\n                            compulsory={true}\n                            type=\"number\"\n                            label=\"Maximum number of enrollee dependant\"\n                            validate={[requiredValidator]}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"plan_id\"\n                            component={CustomSelect}\n                            compulsory={true}\n                            label=\"Plan\"\n                            validate={[requiredValidator]}\n                            options={plans.map(plan => {\n                                return {\n                                    value: plan.id,\n                                    displayValue: plan.name\n                                }\n                            })}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"duration\"\n                            component={CustomSelect}\n                            compulsory={true}\n                            label=\"Duration\"\n                            validate={[requiredValidator]}\n                            options={[\n                                {\n                                    displayValue: '6 Months',\n                                    value: '6'\n                                },\n                                {\n                                    displayValue: '12 Months',\n                                    value: '12'\n                                },\n                            ]}\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            name=\"is_active\"\n                            component={CustomSelect}\n                            compulsory={true}\n                            label=\"Status\"\n                            validate={[requiredValidator]}\n                            options={[\n                                {\n                                    displayValue: 'Active',\n                                    value: 1\n                                },\n                                {\n                                    displayValue: 'Inactive',\n                                    value: 0\n                                },\n                            ]}\n                        />\n                    </div>\n                </div>\n            </Card><br/>\n            <div className=\"row col-md-12\">\n                <div className={styles.buttonContainer}>\n                    <div className={styles.button}>\n                        <CustomButton disabled={invalid || pristine} submittingForm={submittingForm}>{btnText}</CustomButton>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'PolicyForm'\n})(PolicyForm);","export { default } from './PolicyForm.component';"],"sourceRoot":""}