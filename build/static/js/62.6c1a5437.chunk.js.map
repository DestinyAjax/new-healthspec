{"version":3,"sources":["ui/forms/AuthForm/AuthForm.component.module.css","assets/images/signin-bg.jpg","ui/forms/AuthForm/AuthForm.component.js","containers/Pages/SignIn/SignIn.styles.js","containers/Pages/SignIn/SignIn.js","components/utility/intlMessages.js"],"names":["module","exports","reduxForm","form","props","handleSubmit","pristine","invalid","onSubmit","className","Field","name","component","CustomInput","type","label","validate","requiredValidator","CustomButton","style","width","disabled","submittingForm","SignInStyleWrapper","styled","div","bgImage","palette","WithDirection","SignIn","state","formData","dispatch","test","value","setState","startAuth","handleOnChange","e","target","nextProps","status","this","history","push","errorMsg","message","to","src","alt","id","React","Component","connect","AuthReducer","injectIntl","withRef"],"mappings":"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","file":"static/js/62.6c1a5437.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"AuthForm.component_buttonContainer__11puk\"};","module.exports = __webpack_public_path__ + \"static/media/signin-bg.3d130c0e.jpg\";","import React from 'react';\nimport CustomInput from '../../CustomInput';\nimport CustomButton from '../../CustomButton';\nimport { Field, reduxForm } from 'redux-form';\nimport styles from './AuthForm.component.module.css';\nimport { requiredValidator } from '../../../shared/utils/validation';\n\nconst AuthForm = props => {\n\n    const { handleSubmit, pristine, invalid } = props\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={'card-body'}>\n                <Field\n                    name=\"value\"\n                    component={CustomInput}\n                    type=\"text\"\n                    label=\"Email or Enrollee Id\"\n                    validate={[requiredValidator]}\n                />\n                <Field\n                    name=\"password\"\n                    component={CustomInput}\n                    type=\"password\"\n                    label=\"Password\"\n                    validate={[requiredValidator]}\n                /><hr/>\n                <CustomButton style={{width: '100%'}} disabled={invalid || pristine} submittingForm={props.submittingForm}>Login</CustomButton>\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'AuthForm'\n})(AuthForm);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport bgImage from '../../../assets/images/signin-bg.jpg';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst SignInStyleWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  height: 100vh;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: relative;\n  background: url(${bgImage}) no-repeat center center;\n  background-size: cover;\n\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    display: flex;\n    background-color: rgba(0, 0, 0, 0.6);\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n    right: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n  }\n\n  .isoLoginContentWrapper {\n    width: 500px;\n    height: 100%;\n    overflow-y: auto;\n    z-index: 10;\n    position: relative;\n  }\n\n  .isoLoginContent {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 70px 50px;\n    position: relative;\n    background-color: #ffffff;\n\n    @media only screen and (max-width: 767px) {\n      width: 100%;\n      padding: 70px 20px;\n    }\n\n    .isoLogoWrapper {\n      width: 100%;\n      display: flex;\n      margin-bottom: 50px;\n      justify-content: center;\n      flex-shrink: 0;\n\n      a {\n        font-size: 24px;\n        font-weight: 300;\n        line-height: 1;\n        text-transform: uppercase;\n        color: ${palette('secondary', 2)};\n      }\n    }\n\n    .isoSignInForm {\n      width: 100%;\n      display: flex;\n      flex-shrink: 0;\n      flex-direction: column;\n\n      .isoInputWrapper {\n        margin-bottom: 15px;\n\n        &:last-of-type {\n          margin-bottom: 0;\n        }\n\n        input {\n          &::-webkit-input-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n\n          &:-moz-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n\n          &::-moz-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n          &:-ms-input-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n        }\n      }\n\n      .isoHelperText {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 1.2;\n        color: ${palette('grayscale', 1)};\n        padding-left: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '13px'};\n        padding-right: ${props =>\n          props['data-rtl'] === 'rtl' ? '13px' : 'inherit'};\n        margin: 15px 0;\n        position: relative;\n        display: flex;\n        align-items: center;\n\n        &:before {\n          content: '*';\n          color: ${palette('error', 0)};\n          padding-right: 3px;\n          font-size: 14px;\n          line-height: 1;\n          position: absolute;\n          top: 2px;\n          left: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n          right: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n        }\n      }\n\n      .isoHelperWrapper {\n        margin-top: 35px;\n        flex-direction: column;\n      }\n\n      .isoOtherLogin {\n        padding-top: 40px;\n        margin-top: 35px;\n        border-top: 1px dashed ${palette('grayscale', 2)};\n\n        > a {\n          display: flex;\n          margin-bottom: 10px;\n\n          &:last-child {\n            margin-bottom: 0;\n          }\n        }\n\n        button {\n          width: 100%;\n          height: 42px;\n          border: 0;\n          font-weight: 500;\n\n          &.btnFacebook {\n            background-color: #3b5998;\n\n            &:hover {\n              background-color: darken(#3b5998, 5%);\n            }\n          }\n\n          &.btnGooglePlus {\n            background-color: #dd4b39;\n            margin-top: 15px;\n\n            &:hover {\n              background-color: darken(#dd4b39, 5%);\n            }\n          }\n\n          &.btnAuthZero {\n            background-color: #e14615;\n            margin-top: 15px;\n\n            &:hover {\n              background-color: darken(#e14615, 5%);\n            }\n          }\n\n          &.btnFirebase {\n            background-color: ${palette('color', 5)};\n            margin-top: 15px;\n\n            &:hover {\n              background-color: ${palette('color', 6)};\n            }\n          }\n\n          &.btnAccountKit {\n            ${'' /* background-color: rgb(150, 189, 235); */}\n            margin-top: 15px;\n\n            &:hover {\n              ${'' /* background-color: ${palette('color', 6)}; */}\n            }\n          }\n        }\n      }\n\n      .isoForgotPass {\n        font-size: 12px;\n        color: ${palette('text', 3)};\n        margin-bottom: 10px;\n        text-decoration: none;\n\n        &:hover {\n          color: ${palette('primary', 0)};\n        }\n      }\n\n      button {\n        font-weight: 500;\n      }\n    }\n  }\n`;\n\nexport default WithDirection(SignInStyleWrapper);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport AuthForm from '../../../ui/forms/AuthForm/AuthForm.component';\nimport { startAuth } from '../../../shared/actions/Auth.action';\n\nimport SignInStyleWrapper from './SignIn.styles';\n\nclass SignIn extends React.Component {\n\n  state = {\n    submittingForm: false,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.status !== null) {\n      this.setState({\n        submittingForm: false\n      });\n    }\n\n    if (nextProps.status === 200) {\n      return this.props.history.push('/chose_role');\n    }\n\n    if (nextProps.status === 522) {\n      this.setState({\n        submittingForm: false\n      });\n    }\n  }\n\n  handleSubmit = formData => {\n    const {dispatch} = this.props;\n\n    formData['field'] = 'enrollee_id';\n\n    if (/(.+)@(.+){2,}\\.(.+){2,}/.test(formData.value)) {\n      formData['field'] = 'email';\n    }\n\n    this.setState({\n      submittingForm: true\n    }, () => {\n      dispatch(startAuth(formData));\n    });\n  }\n\n  handleOnChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n  \n  render() {\n\n    let errorMsg;\n    if (this.props.status !== 200 && this.props.message) {\n      errorMsg = (\n        <div className=\"\">\n          { this.props.message }\n        </div>\n      );\n    }\n\n    return (\n      <SignInStyleWrapper className=\"isoSignInPage\">\n        <div className=\"isoLoginContentWrapper\">\n          <div className=\"isoLoginContent\">\n            <div className=\"isoLogoWrapper\">\n              <Link to=\"/\">\n                <img src=\"/images/logo.jpeg\" alt=\"ohis-logo\" style={{width: '100px'}} />\n              </Link>\n            </div>\n            <div className=\"isoSignInForm\">\n              {errorMsg && (\n                <div className=\"alert alert-danger\">\n                  {errorMsg}\n                </div>\n              )}\n              <AuthForm onSubmit={this.handleSubmit} submittingForm={this.state.submittingForm} />\n              <hr/>\n              <div className=\"isoCenterComponent isoHelperWrapper\">\n                <Link to=\"/forgotpassword\" className=\"isoForgotPass\">\n                  <IntlMessages id=\"page.signInForgotPass\" />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </SignInStyleWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  status: state.AuthReducer.status,\n  message: state.AuthReducer.message,\n});\n\nexport default connect(mapStateToProps, null)(SignIn);\n","import React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nconst InjectMassage = props => <FormattedMessage {...props} />;\nexport default injectIntl(InjectMassage, {\n  withRef: false,\n});\n"],"sourceRoot":""}