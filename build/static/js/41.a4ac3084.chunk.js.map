{"version":3,"sources":["pages/Policy/View/PolicyView.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Breadcrumb/Breadcrumb.component.module.css","ui/Breadcrumb/Breadcrumb.component.js","ui/Breadcrumb/index.js","ui/Datatable/SearchForm.component.js","ui/Datatable/Datatable.style.js","ui/Datatable/Datatable.component.js","ui/Datatable/index.js","ui/Spinner/Spinner.component.module.css","ui/Spinner/Spinner.component.js","ui/Spinner/index.js"],"names":["PolicyView","state","tab","this","props","getPolicy","match","params","slug","getPolicyReset","status","policy","className","to","type","style","width","marginBottom","name","price","classnames","active","aria-label","data-balloon-pos","columns","key","title","dataIndex","cell","searchable","url","actions","Component","connect","PolicyReducer","get_policy_status","dispatch","payload","LayoutContentStyle","styled","div","palette","module","exports","Breadcrumb","links","map","link","styles","item","itemTwo","join","defaultProps","withRouter","ChoseRoleReducer","role","reduxForm","form","onChangeHandler","Field","component","CustomInput","placeholder","validate","onChange","event","target","value","DatatableStyleWrapper","WithDirection","Datatable","data","per_page","last_page","loading","total_pages","current_page","active_data","show_actions","query","get","end_point","a","async","getStorage","token","fetch","method","headers","handleSearch","filter","column","search_key","response","json","reset","detectQueryString","RegExp","test","fetchData","page_number","setState","request","tableData","table","index","id","push","meta","total","getPaginated","selected","row","console","log","JSON","stringify","length","action","classes","onClick","handle","customswal","content","buttons","delete","param","newData","swal","history","tableList","icon","aria-hidden","is_selected","col","container","colSpan","Fragment","pageNumbers","i","Math","ceil","searchForm","renderPageNumbers","number","hideSearch","onRow","record","rowIndex","dataSource","pagination","React","Spinner","message"],"mappings":"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","file":"static/js/41.a4ac3084.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classnames from \"classnames\";\nimport {Card} from 'antd';\nimport Spinner from \"../../../ui/Spinner\";\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../../containers/Dashboard/Dashboard';\nimport Breadcrumb from \"../../../ui/Breadcrumb\";\nimport Datatable from '../../../ui/Datatable';\nimport Loader from '../../../ui/Loader/Loader.Component';\nimport { getPolicy, getPolicyReset } from \"../../../shared/actions/Policy.action\";\n\nclass PolicyView extends Component {\n    \n    state = {\n        tab: 1\n    };\n\n    componentDidMount() {\n        this.props.getPolicy(this.props.match.params.slug);\n    }\n\n    componentWillUnmount() {\n        this.props.getPolicyReset();\n    }\n\n    render() {\n        const { tab } = this.state;\n        const { status, policy } = this.props;\n\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>  \n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4>All Banks</h4>\n                                </div>\n                                <div className=\"col-md-6 text-right\">\n                                    <Link className=\"\" to=\"/dashboard/bank_add\">\n                                        <button className=\"btn btn-sm btn-success\" type=\"button\">Create Bank</button>\n                                    </Link>\n                                </div> \n                            </div><hr/>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                {status === 200 ? (\n                                    <Card style={{width: '100%'}}>\n                                        <div style={{marginBottom: '20px'}}>\n                                            <div className=\"providerBasic\">\n                                                <h3>{policy.name}</h3>\n                                                <h5>Price: ₦{policy.price}</h5>\n                                            </div>\n                                            <div className=\"providerContent\">\n                                                <div className=\"tabs\">\n                                                    <button\n                                                        type=\"button\"\n                                                        className={classnames(\"tabSingle\", {\n                                                            active: tab === 1\n                                                        })}\n                                                        aria-label=\"Click Me!\"\n                                                        data-balloon-pos=\"up\"\n                                                    >\n                                                        Enrollees\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        \n                                            <Datatable\n                                                columns={[\n                                                    {\n                                                        key: \"id\",\n                                                        title: \"ID\",\n                                                        dataIndex: 'id',\n                                                        cell: \"Default\",\n                                                        searchable: false\n                                                    }\n                                                ]}\n                                                url={\"organization_profile/index/2\"}\n                                                actions={[\n                                                    {\n                                                        key: \"slug\",\n                                                        type: \"delete\",\n                                                        title: \"Delete\",\n                                                        url: \"dashboard/organization_profile/delete/\"\n                                                    },\n                                                    {\n                                                        key: \"slug\",\n                                                        type: \"view\",\n                                                        title: \"VIEW ENROLLEES\",\n                                                        url: \"/dashboard/provider_all-beneficiary_\"\n                                                    }\n                                                ]}\n                                            />\n                                    </Card>\n                                ) : (<Spinner />)}\n                                </div>\n                            </div>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    policy: state.PolicyReducer.policy,\n    status: state.PolicyReducer.get_policy_status\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getPolicy: payload => dispatch(getPolicy(payload)),\n    getPolicyReset: payload => dispatch(getPolicyReset(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PolicyView);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Breadcrumb.component_container__2V5_E\",\"item\":\"Breadcrumb.component_item__ZqqpH\",\"itemTwo\":\"Breadcrumb.component_itemTwo__1JtzI\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport styles from './Breadcrumb.component.module.css';\n\nconst Breadcrumb = props => {\n    let links = props.links.map(link => (\n        <Link to={link.url} className={[styles.item, styles.itemTwo].join(\" \")} key={link.url}> > {link.name}</Link>\n    ));\n\n    return (\n        <div className={'card-body bg-light '} >\n            <Link className={styles.item} to=\"/chose_role\">Dashboard</Link>\n            {links}\n        </div>\n    )\n}\n\nBreadcrumb.defaultProps = {\n    links: []\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.ChoseRoleReducer.role\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Breadcrumb));","export { default } from './Breadcrumb.component';","import React from 'react';\nimport CustomInput from '../CustomInput';\nimport { Field, reduxForm } from 'redux-form';\n// import { requiredValidator } from '../../../shared/utils/validation';\n\n\nconst SearchForm = props => {\n\n    const { onChangeHandler } = props\n\n    const onNameChanged = event => {\n        onChangeHandler(event.target.value);\n    }\n\n    return (\n        <form>\n            <Field\n                name=\"value\"\n                component={CustomInput}\n                type=\"text\"\n                placeholder=\"Search\"\n                validate={[]}\n                onChange={onNameChanged}\n            />\n        </form>\n    )\n\n}\n\nexport default reduxForm({\n    form: 'SearchForm'\n})(SearchForm);","import styled from 'styled-components';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst DatatableStyleWrapper = styled.div`\n  \n  .pagination {\n    margin-top: 25px !important;\n  }\n\n  .pagination span {\n    cursor: pointer;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n  }\n\n  .pagination span.active {\n    background-color: #15974b;\n    color: white;\n    border: 1px solid #15974b;\n  }\n\n.center {\n  text-align: center;\n}\n.actions {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n}\n.actions2 {\n  width: 50%;\n  margin: 15px auto;\n}\n\n.action {\n    opacity: 1;\n    display: block;\n    font-size: 12px;\n    cursor: pointer;\n    padding: 10px 10px;\n\n    color: #FFFFFF;\n    border-radius: 5px;\n    letter-spacing: 0.29px;\n    transition: all 0.3s ease 0s;\n    border: 1px solid transparent;\n\n    margin-bottom: 15px;\n}\n.delete {\n  opacity: .8;\n  background: #e43829;\n}\n.edit {\n  opacity: .8;\n  background: #ffca28;\n}\n.view {\n  opacity: .8;\n  background: #15974b;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 5px 5px;\n  /* background: #eceeef; */\n  margin-bottom: 15px;\n}\n.field,\n.comparison {\n  width: 14%;\n}\n.form {\n  width: 30%;\n}\n.filter {\n  width: 10%;\n}\n.button {\n  width: 100%;\n  display: block;\n  background: #eceeef;\n  padding: 5px 5px;\n  border-radius: 5px;\n  text-align: center;\n  margin-top: 7px;\n}\n\n`;\n\nexport default WithDirection(DatatableStyleWrapper);\n","import React from 'react';\nimport swal from 'sweetalert';\nimport { Table, Tag } from 'antd';\n// import Filter from './Filter.component';\nimport { withRouter } from 'react-router-dom';\nimport SearchForm from './SearchForm.component';\nimport customswal from '@sweetalert/with-react';\nimport { getStorage } from '../../shared/utils/storage';\nimport { url } from './../../config';\n\nimport DatatableStyleWrapper from './Datatable.style';\n\nclass Datatable extends React.Component {\n\n    state = {\n        data: [],\n        per_page: 20,\n        last_page: 0,\n        loading: true,\n        total_pages: 0,\n        current_page: 0,\n        active_data: null,\n        show_actions: false,\n        query: ''\n    };\n\n    get = async end_point => {\n        let token = await getStorage('ohis:auth_token');\n\n        return fetch(url + end_point, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"AuthorizationHeader\": \"Bearer OSUN_1234567890987654321\",\n                'AuthToken': token\n            },\n        });\n    }\n\n    handleSearch = async value => {\n        let searchable = this.props.columns.filter(column => column.searchable).map(column => column.search_key).join(\"*\");\n        let query = `${searchable}:${value}`;\n\n        let response = await this.get(`${this.props.url}?search=${query}`);\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    detectQueryString = (url) => {\n        // get the current URL\n\n        // regex pattern for detecting ? character\n        var pattern = new RegExp(/\\?.+=.*/g);\n\n        return pattern.test(url);\n    }\n\n    fetchData = async (url, page_number) => {\n        let request;\n        this.setState({ loading: true });\n        if (this.detectQueryString(url)) request = this.get(`${url}&page=${page_number}`);\n        else request = this.get(`${url}?page=${page_number}`);\n        //make http request\n        let response = await request;\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    reset = data => {\n        let newData, total_pages, last_page, current_page;\n        let tableData = [];\n        \n        if (data.data) {\n            newData = data.data.map(data => {\n                data['is_selected'] = false;\n                return data;\n            });\n            newData.map((table,index) => {\n                table['key'] = table.id\n                tableData.push(table);\n            });\n            total_pages = data.meta.total;\n            last_page = data.meta.last_page;\n            current_page = data.meta.current_page;\n        } else {\n            newData = [];\n            total_pages = 0;\n            last_page = 0;\n            current_page = 0;\n        }\n\n        this.setState({\n            data: tableData,\n            loading: false,\n            total_pages: total_pages,\n            last_page: last_page,\n            current_page: current_page\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData(this.props.url, 1);\n    }\n\n    getPaginated = page_number => {\n        this.fetchData(this.props.url, page_number);\n    }\n\n    selected = row => {\n        console.log(JSON.stringify(row));\n        let tableData = [];\n        let newData = this.state.data.map(data => {\n            data['is_selected'] = false;\n\n            if (row.id === data.id) {\n                data['is_selected'] = true;\n            }\n\n            return data;\n        });\n\n        newData.map((table,index) => {\n            table['key'] = table.id\n            tableData.push(table);\n        });\n\n        this.setState({\n            data: tableData,\n            active_data: row,\n            show_actions: true\n        }, async () => {\n            if (this.props.actions.length) {\n                let actions = this.props.actions.map((action, index) => {\n\n                    let classes = `action delete`;\n\n                    if (action.type === 'edit') {\n                        classes = `action edit`;\n                    }\n\n                    if (action.type === 'view') {\n                        classes = `action view`;\n                    }\n\n\n                    return (\n                        <div key={index} className={classes} onClick={() => this.handle(action)}>\n                            {action.title}\n                        </div>\n                    )\n                });\n\n                customswal({\n                    content: (\n                        <div>\n                            <h1>Action List(s)</h1>\n                            <div className=\"actions2\">\n                                {actions}\n                            </div>\n                        </div>\n                    ),\n                    buttons: false,\n                });\n            }\n        });\n    }\n\n    delete = async (key, url) => {\n        //set is deleting status on the particular table\n        // let newData = data.data.map(data => {\n        //     data['is_selected'] = false;\n        //     return data;\n        // });\n        // this.setState({\n        //     data: newData,\n        // });\n\n        let param = this.state.active_data[key];\n\n        let response = await this.get(`${url}${param}`);\n        const data = await response.json();\n\n\n        if (data.status === 200) {\n            let newData = [...this.state.data].filter(data => {\n                return param !== data[key]\n            });\n\n            this.setState({\n                data: newData,\n            });\n        }\n    }\n\n    handle = async ({ type, url, key }) => {\n        let alert = await swal({\n            title: `Are you sure you want to ${type}`,\n            type: 'warning',\n            buttons: [\n                'No',\n                'Yes, I am sure!'\n            ],\n        });\n        if (alert) {\n            if (type === 'delete') {\n                this.delete(key, url);\n            }\n            //edit\n            if (type === 'edit') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n            if (type === 'view') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n        }\n    }\n\n    tableList = () => {\n        let values = [];\n\n        if (this.state.data.length) {\n            return this.state.data.map(row => {\n                let icon = <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n\n                if (row.is_selected) {\n                    icon = <i className=\"fa fa-circle\" aria-hidden=\"true\"></i>\n                }\n\n                return (\n                    <tr key={row.id} onClick={() => this.selected(row)}>\n                        <td>{icon}</td>\n                        {this.props.columns.map(col =>\n                            <td key={col.key}>\n                                {row[col.key]}\n                            </td>\n                        )}\n                    </tr>\n                )\n            });\n        }\n\n        let container = (\n            <tr>\n                <td colSpan={this.props.columns.length + 1} className=\"center\">No Records Found.</td>\n            </tr>\n        )\n\n        if (this.state.loading) {\n            container = (\n                <tr>\n                    <td colSpan={this.props.columns.length + 1} className=\"center\">Slow network, Loading...</td>\n                </tr>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                {container}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(this.state.total_pages / this.state.per_page); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let classes = this.state.current_page === number ? 'active' : '';\n\n            if (number == 1 || number == this.state.total_pages || (number >= this.state.current_page - 2 && number <= this.state.current_page + 2)) {\n                return (\n                    <span key={number} className={classes} onClick={() => this.getPaginated(number)}>{number}</span>\n                );\n            }\n        });\n\n        let searchForm;\n\n        if (!this.props.hideSearch) {\n            searchForm = (\n                <SearchForm onChangeHandler={this.handleSearch} />\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <DatatableStyleWrapper className=\"iosDatatableWrapper\">\n                    {searchForm}\n                    <Table \n                        onRow={(record, rowIndex) => {\n                            return {\n                                onClick: event => {this.selected(record)},\n                            };\n                        }}                \n                        columns={this.props.columns} \n                        dataSource={this.state.data} \n                        pagination={false}\n                    />\n                    \n                    {/* <table className={['table', 'table-striped', 'table-hover'].join(' ')}>\n                        <thead>\n                            <tr>\n                            <th></th>\n                            {this.props.columns.map((column, index) => <th key={index}>{column.title}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.tableList()}\n                        </tbody>\n                    </table> */}\n                    <div className=\"pagination\">\n                        <span onClick={() => this.getPaginated(1)}>&laquo;</span>\n                        {renderPageNumbers}\n                        <span onClick={() => this.getPaginated(this.props.last_page)}>&raquo;</span>\n                    </div>\n                </DatatableStyleWrapper>\n            </React.Fragment>\n        );\n    };\n}\n\nDatatable.defaultProps = {\n    hideSearch: false\n}\n\nexport default withRouter(Datatable);","export { default } from './Datatable.component';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spinner.component_container__W-GWN\",\"content\":\"Spinner.component_content__11MBV\",\"message\":\"Spinner.component_message__3kFxw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Spinner.component.module.css';\n\nconst Spinner = ({message}) => (\n\t<div className={styles.container}>\n\t\t<div className={styles.content}>\n\t\t\t<i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\n\t\t\t<div className={styles.message}>\n\t\t\t\t{message}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\n\nSpinner.defaultProps = {\n\tmessage: 'Loading'\n};\n\nexport default Spinner;","export { default } from './Spinner.component.js';"],"sourceRoot":""}