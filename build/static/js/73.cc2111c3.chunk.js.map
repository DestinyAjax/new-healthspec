{"version":3,"sources":["pages/PreAuth/All/PreAuthAll.js","components/utility/layoutContent.style.js","components/utility/layoutContent.js","ui/Datatable/SearchForm.component.js","ui/Datatable/Datatable.style.js","ui/Datatable/Datatable.component.js","ui/Datatable/index.js"],"names":["PreAuthAll","state","query_string","submitFilter","type","props","match","params","claims","toUpperCase","setState","this","page_name","actionButtons","DatatableList","actions","active","links","className","to","class","style","marginRight","role","name","url","key","title","query","columns","cell","searchable","dataIndex","sorter","a","b","provider_name","length","search_key","beneficiary_first_name","beneficiary_surname","id","width","marginBottom","Component","connect","ChoseRoleReducer","LayoutContentStyle","styled","div","palette","reduxForm","form","onChangeHandler","Field","component","CustomInput","placeholder","validate","onChange","event","target","value","DatatableStyleWrapper","WithDirection","Datatable","data","per_page","last_page","loading","total_pages","current_page","active_data","show_actions","get","end_point","async","getStorage","token","fetch","method","headers","handleSearch","filter","column","map","join","response","json","reset","detectQueryString","RegExp","test","fetchData","page_number","request","tableData","table","index","push","meta","total","getPaginated","selected","row","console","log","JSON","stringify","action","classes","onClick","handle","customswal","content","buttons","delete","param","status","newData","swal","history","tableList","icon","aria-hidden","is_selected","col","container","colSpan","Fragment","pageNumbers","i","Math","ceil","searchForm","renderPageNumbers","number","hideSearch","onRow","record","rowIndex","dataSource","pagination","React","defaultProps","withRouter"],"mappings":"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","file":"static/js/73.cc2111c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {Card} from 'antd';\nimport { Link } from 'react-router-dom';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport DashboardLayout from '../../../containers/Dashboard/Dashboard';\nimport Datatable from '../../../ui/Datatable';\nimport Loader from '../../../ui/Loader/Loader.Component';\nimport {FaPlus} from 'react-icons/fa';\n\nclass PreAuthAll extends Component {\n\n    state = {\n        query_string: null,\n    };\n\n    componentDidMount(){\n        this.submitFilter()\n    }\n\n    submitFilter = type => {\n        if(this.props.match.params.claims){\n            this.query_string = `claim_type=${this.props.match.params.claims}`;\n        }else if(this.props.match.params.type){\n            this.query_string = `type=${this.props.match.params.type.toUpperCase()}`;\n        }else{\n            this.query_string = \"type=PREAUTH\";\n        }\n        this.setState({\n            query_string: this.query_string,\n        });\n    }\n\n    render() {\n        let actions = [];\n        let page_name, actionButtons;\n        const { active } = this.props;\n        if(this.props.match.params.claims) {\n            let type = this.props.match.params.claims;\n            page_name = (\n                <div className={'h3'} >Manage Claim</div>\n            )\n            if(this.props.match.params.claims){\n                let links;\n                if(type === \"claim\") {\n                    links =(\n                        <div className='list_row'>\n                            <Link className={`btn btn-sm btn-warning`} to=\"/dashboard/claim_all/claim\">Pending</Link>\n                            <Link className={`btn btn-sm btn-success`} to=\"/dashboard/claim_all/claimed\">Vetting</Link>\n                            <Link className={`btn btn-sm btn-primary`} to=\"/dashboard/claim_all/paid\">Claimable</Link>\n                        </div>\n                    )\n                }\n                if(type === \"claimed\") {\n                    links =(\n                        <div className='list_row'>\n                            <Link className={`btn btn-sm btn-warning`} to=\"/claim_all/claim\">Pending</Link>\n                            <Link className={`btn btn-sm btn-success`} to=\"/claim_all/claimed\">Vetting</Link>\n                            <Link className={`btn btn-sm btn-primary`} to=\"/claim_all/paid\">Claimable</Link>\n                        </div>\n                    )\n                }\n                if(type === \"paid\") {\n                    links =(\n                        <div className='list_row'>\n                            <Link className={`btn btn-sm btn-warning`} to=\"/claim_all/claim\">Pending</Link>\n                            <Link className={`btn btn-sm btn-success`} to=\"/claim_all/claimed\">Vetting</Link>\n                            <Link className={`btn btn-sm btn-primary`} to=\"/claim_all/paid\">Claimable</Link>\n                        </div>\n                    )\n                }\n                actionButtons = (\n                    <div class=\"pull pull-right\">\n                        <div className={`list_row`}>\n                            {links}\n                        </div>\n                    </div>\n                )\n            }\n        }\n        if(this.props.match.params.type) {\n            let type = this.props.match.params.type;\n            page_name = (\n                <div className={'h3'} >Encounter </div>\n            )\n\n            if(this.props.match.params.type){\n                let links;\n                if(type === \"preauth\") {\n                    links =(\n                        <div className='list_row'>\n                            <Link style={{marginRight: '10px'}} className={`btn btn-sm btn-danger`} to=\"/dashboard/visitation/preauth\">Registered Patients</Link>\n                            <Link className={`btn btn-sm btn-success`} to=\"/dashboard/visitation/refer\">Referred Patients</Link>\n                        </div>\n                    )\n                }\n                if(type === \"refer\") {\n                    links =(\n                        <div className='list_row'>\n                            <Link style={{marginRight: '10px'}} className={`btn btn-sm btn-danger`} to=\"/dashboard/visitation/preauth\">Registered Patients</Link>\n                            <Link className={`btn btn-sm btn-success`} to=\"/dashboard/visitation/refer\">Referred Patients</Link>\n                        </div>\n                    )\n                }\n                actionButtons = (\n                    <div class=\"pull pull-right\">\n                        <div className={`list_row`}>\n                            {links}\n                        </div>\n                    </div>\n                )\n            }\n        }\n        let DatatableList;\n        if (active.role.name === \"PROVIDER_ADMIN\" || active.role.name === \"PROVIDER_MODERATOR\" ||\n            active.role.name === \"AGENT_ADMIN\" || active.role.name === \"AGENT_MODERATOR\" ||\n            active.role.name === \"HMO_ADMIN\" || active.role.name === \"HMO_MODERATOR\") {\n            let url;let type = this.props.match.params.type;\n            if(this.props.match.params.claims) url = \"/dashboard/visitaion_\";\n            else url = \"/dashboard/visitaion_\"\n            if(type === \"refer\" && ((active.role.name === \"PROVIDER_ADMIN\") || (active.role.name === \"PROVIDER_MODERATOR\"))){\n                actions = [\n                    {\n                        key: \"id\",\n                        type: \"view\",\n                        title: \"View Encounter\",\n                        url: url\n                    },\n                    // {\n                    //     key: \"id\",\n                    //     type: \"edit\",\n                    //     title: \"Edit Encounter\",\n                    //     url: '/visitation_edit_'\n                    // }\n                ];\n            }else{\n                actions = [\n                    {\n                        key: \"id\",\n                        type: \"view\",\n                        title: \"View Encounter\",\n                        url: url\n                    }\n                ];\n            }\n\n        }\n        if(this.state.query_string){\n            let query = this.state.query_string;\n            let type = this.props.match.params.type;\n            if(type === \"refer\"){\n                DatatableList = (\n                    <Datatable\n                        columns={[\n                            {\n                                cell: 'Default',\n                                searchable: true,\n                                dataIndex: 'parent_provider_name',\n                                key: 'parent_provider_name',\n                                title: 'Referred From Hospital',\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: true,\n                                key: 'provider_name',\n                                dataIndex: 'provider_name',\n                                title: 'Referred To Hospital',\n                                sorter: (a,b) => a.provider_name.length - b.provider_name.length,\n                            },\n                            {\n                                cell: 'Default',\n                                dataIndex: 'beneficiary_enrollee_id',\n                                searchable: true,\n                                key: 'beneficiary_enrollee_id',\n                                title: 'Enrollee Id',\n                                search_key: 'user.enrollee_id',\n                            },\n                            {\n                                cell: 'Default',\n                                dataIndex: 'beneficiary_first_name',\n                                searchable: true,\n                                key: 'beneficiary_first_name',\n                                title: 'First Name',\n                                search_key: 'user.first_name',\n                                sorter: (a,b) => a.beneficiary_first_name.length - b.beneficiary_first_name.length,\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: true,\n                                dataIndex: 'beneficiary_surname',\n                                key: 'beneficiary_surname',\n                                title: 'Last Name',\n                                search_key: 'user.first_name',\n                                sorter: (a,b) => a.beneficiary_surname.length - b.beneficiary_surname.length,\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: false,\n                                dataIndex: 'services_count',\n                                key: 'services_count',\n                                title: 'Service QTY',\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: false,\n                                key: 'visit_code',\n                                dataIndex: 'visit_code',\n                                title: 'Visit Code',\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: false,\n                                key: 'visit_date',\n                                dataIndex: 'visit_date',\n                                title: 'Date',\n                            },\n                            {\n                                key: 'status',\n                                title: 'Status',\n                                dataIndex: 'status',\n                                cell: 'Default',\n                                searchable: false,\n                            },\n                        ]}\n                        url={`treatment/index/${active.id}?${query}`}\n                        actions={actions}\n                    />\n                )\n            }else{\n                DatatableList = (\n                    <Datatable\n                        columns={[\n                            {\n                                cell: 'Default',\n                                searchable: false,\n                                key: 'visit_code',\n                                dataIndex: 'visit_code',\n                                title: 'Visit ID',\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: true,\n                                key: 'beneficiary_enrollee_id',\n                                title: 'Enrollee Id',\n                                dataIndex: 'beneficiary_enrollee_id',\n                                search_key: 'user.enrollee_id',\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: true,\n                                key: 'provider_name',\n                                dataIndex: 'provider_name',\n                                title: 'Hospital Name',\n                                sorter: (a,b) => a.provider_name.length - b.provider_name.length,\n                            },\n\n                            {\n                                cell: 'Default',\n                                searchable: true,\n                                key: 'beneficiary_first_name',\n                                title: 'First Name',\n                                dataIndex: 'beneficiary_first_name',\n                                search_key: 'user.first_name',\n                                sorter: (a,b) => a.beneficiary_first_name.length - b.beneficiary_first_name.length,                          \n                            },\n                            {\n                                cell: 'Default',\n                                searchable: true,\n                                dataIndex: 'beneficiary_surname',\n                                key: 'beneficiary_surname',\n                                title: 'Last Name',\n                                search_key: 'user.first_name',\n                                sorter: (a,b) => a.beneficiary_surname.length - b.beneficiary_surname.length,\n                            },\n                            {\n                                cell: 'Default',\n                                searchable: false,\n                                key: 'services_count',\n                                dataIndex: 'services_count',\n                                title: 'Service QTY',\n                            },\n\n                            {\n                                cell: 'Default',\n                                searchable: false,\n                                key: 'visit_date',\n                                dataIndex: 'visit_date',\n                                title: 'Date',\n                            },\n                            {\n                                key: 'status',\n                                title: 'Status',\n                                dataIndex: 'status',\n                                cell: 'Default',\n                                searchable: false,\n                            },\n                        ]}\n                        url={`treatment/index/${active.id}?${query}`}\n                        actions={actions}\n                    />\n                )\n            }\n        }\n        // Referred Patients\n        // let breadcrumb = (\n            \n        //     <Breadcrumb links={[\n        //         {\n        //             url: '/insurance',\n        //             name: 'Insurance'\n        //         },\n               \n        //     ]} />\n        // )\n\n        if (!this.props.match.params.claims) {\n            // breadcrumb = (\n            //     <Breadcrumb links={[\n            //         {\n            //             url: '/insurance',\n            //             name: 'Insurance'\n            //         },\n            //         {\n            //             url: '/visitation/preauth',\n            //             name: `Encounter (${this.props.match.params.type.toUpperCase() === 'PREAUTH' ? 'Registered Patients' : 'Referred Patients'})`\n            //         },\n            //     ]} />\n            // )\n        }\n\n        return (\n            <DashboardLayout>\n                <Loader>\n                    <LayoutContentWrapper>\n                        <LayoutContent>\n                            <Card title=\"\" style={{width: '100%'}}>\n                                <div style={{marginBottom: '20px'}}>\n                                    {actionButtons}\n                                    {page_name}\n                                </div>\n                                {DatatableList}\n                            </Card>\n                        </LayoutContent>\n                    </LayoutContentWrapper>\n                </Loader>\n            </DashboardLayout>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    active: state.ChoseRoleReducer.role\n});\n\nexport default connect(mapStateToProps, null)(PreAuthAll);","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","import React from 'react';\nimport CustomInput from '../CustomInput';\nimport { Field, reduxForm } from 'redux-form';\n// import { requiredValidator } from '../../../shared/utils/validation';\n\n\nconst SearchForm = props => {\n\n    const { onChangeHandler } = props\n\n    const onNameChanged = event => {\n        onChangeHandler(event.target.value);\n    }\n\n    return (\n        <form>\n            <Field\n                name=\"value\"\n                component={CustomInput}\n                type=\"text\"\n                placeholder=\"Search\"\n                validate={[]}\n                onChange={onNameChanged}\n            />\n        </form>\n    )\n\n}\n\nexport default reduxForm({\n    form: 'SearchForm'\n})(SearchForm);","import styled from 'styled-components';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst DatatableStyleWrapper = styled.div`\n  \n  .pagination {\n    margin-top: 25px !important;\n  }\n\n  .pagination span {\n    cursor: pointer;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n  }\n\n  .pagination span.active {\n    background-color: #15974b;\n    color: white;\n    border: 1px solid #15974b;\n  }\n\n.center {\n  text-align: center;\n}\n.actions {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n}\n.actions2 {\n  width: 50%;\n  margin: 15px auto;\n}\n\n.action {\n    opacity: 1;\n    display: block;\n    font-size: 12px;\n    cursor: pointer;\n    padding: 10px 10px;\n\n    color: #FFFFFF;\n    border-radius: 5px;\n    letter-spacing: 0.29px;\n    transition: all 0.3s ease 0s;\n    border: 1px solid transparent;\n\n    margin-bottom: 15px;\n}\n.delete {\n  opacity: .8;\n  background: #e43829;\n}\n.edit {\n  opacity: .8;\n  background: #ffca28;\n}\n.view {\n  opacity: .8;\n  background: #15974b;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 5px 5px;\n  /* background: #eceeef; */\n  margin-bottom: 15px;\n}\n.field,\n.comparison {\n  width: 14%;\n}\n.form {\n  width: 30%;\n}\n.filter {\n  width: 10%;\n}\n.button {\n  width: 100%;\n  display: block;\n  background: #eceeef;\n  padding: 5px 5px;\n  border-radius: 5px;\n  text-align: center;\n  margin-top: 7px;\n}\n\n`;\n\nexport default WithDirection(DatatableStyleWrapper);\n","import React from 'react';\nimport swal from 'sweetalert';\nimport { Table, Tag } from 'antd';\n// import Filter from './Filter.component';\nimport { withRouter } from 'react-router-dom';\nimport SearchForm from './SearchForm.component';\nimport customswal from '@sweetalert/with-react';\nimport { getStorage } from '../../shared/utils/storage';\nimport { url } from './../../config';\n\nimport DatatableStyleWrapper from './Datatable.style';\n\nclass Datatable extends React.Component {\n\n    state = {\n        data: [],\n        per_page: 20,\n        last_page: 0,\n        loading: true,\n        total_pages: 0,\n        current_page: 0,\n        active_data: null,\n        show_actions: false,\n        query: ''\n    };\n\n    get = async end_point => {\n        let token = await getStorage('ohis:auth_token');\n\n        return fetch(url + end_point, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"AuthorizationHeader\": \"Bearer OSUN_1234567890987654321\",\n                'AuthToken': token\n            },\n        });\n    }\n\n    handleSearch = async value => {\n        let searchable = this.props.columns.filter(column => column.searchable).map(column => column.search_key).join(\"*\");\n        let query = `${searchable}:${value}`;\n\n        let response = await this.get(`${this.props.url}?search=${query}`);\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    detectQueryString = (url) => {\n        // get the current URL\n\n        // regex pattern for detecting ? character\n        var pattern = new RegExp(/\\?.+=.*/g);\n\n        return pattern.test(url);\n    }\n\n    fetchData = async (url, page_number) => {\n        let request;\n        this.setState({ loading: true });\n        if (this.detectQueryString(url)) request = this.get(`${url}&page=${page_number}`);\n        else request = this.get(`${url}?page=${page_number}`);\n        //make http request\n        let response = await request;\n        const data = await response.json();\n\n        this.reset(data);\n    }\n\n    reset = data => {\n        let newData, total_pages, last_page, current_page;\n        let tableData = [];\n        \n        if (data.data) {\n            newData = data.data.map(data => {\n                data['is_selected'] = false;\n                return data;\n            });\n            newData.map((table,index) => {\n                table['key'] = table.id\n                tableData.push(table);\n            });\n            total_pages = data.meta.total;\n            last_page = data.meta.last_page;\n            current_page = data.meta.current_page;\n        } else {\n            newData = [];\n            total_pages = 0;\n            last_page = 0;\n            current_page = 0;\n        }\n\n        this.setState({\n            data: tableData,\n            loading: false,\n            total_pages: total_pages,\n            last_page: last_page,\n            current_page: current_page\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData(this.props.url, 1);\n    }\n\n    getPaginated = page_number => {\n        this.fetchData(this.props.url, page_number);\n    }\n\n    selected = row => {\n        console.log(JSON.stringify(row));\n        let tableData = [];\n        let newData = this.state.data.map(data => {\n            data['is_selected'] = false;\n\n            if (row.id === data.id) {\n                data['is_selected'] = true;\n            }\n\n            return data;\n        });\n\n        newData.map((table,index) => {\n            table['key'] = table.id\n            tableData.push(table);\n        });\n\n        this.setState({\n            data: tableData,\n            active_data: row,\n            show_actions: true\n        }, async () => {\n            if (this.props.actions.length) {\n                let actions = this.props.actions.map((action, index) => {\n\n                    let classes = `action delete`;\n\n                    if (action.type === 'edit') {\n                        classes = `action edit`;\n                    }\n\n                    if (action.type === 'view') {\n                        classes = `action view`;\n                    }\n\n\n                    return (\n                        <div key={index} className={classes} onClick={() => this.handle(action)}>\n                            {action.title}\n                        </div>\n                    )\n                });\n\n                customswal({\n                    content: (\n                        <div>\n                            <h1>Action List(s)</h1>\n                            <div className=\"actions2\">\n                                {actions}\n                            </div>\n                        </div>\n                    ),\n                    buttons: false,\n                });\n            }\n        });\n    }\n\n    delete = async (key, url) => {\n        //set is deleting status on the particular table\n        // let newData = data.data.map(data => {\n        //     data['is_selected'] = false;\n        //     return data;\n        // });\n        // this.setState({\n        //     data: newData,\n        // });\n\n        let param = this.state.active_data[key];\n\n        let response = await this.get(`${url}${param}`);\n        const data = await response.json();\n\n\n        if (data.status === 200) {\n            let newData = [...this.state.data].filter(data => {\n                return param !== data[key]\n            });\n\n            this.setState({\n                data: newData,\n            });\n        }\n    }\n\n    handle = async ({ type, url, key }) => {\n        let alert = await swal({\n            title: `Are you sure you want to ${type}`,\n            type: 'warning',\n            buttons: [\n                'No',\n                'Yes, I am sure!'\n            ],\n        });\n        if (alert) {\n            if (type === 'delete') {\n                this.delete(key, url);\n            }\n            //edit\n            if (type === 'edit') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n            if (type === 'view') {\n                let param = this.state.active_data[key];\n                return this.props.history.push(`${url}${param}`);\n            }\n        }\n    }\n\n    tableList = () => {\n        let values = [];\n\n        if (this.state.data.length) {\n            return this.state.data.map(row => {\n                let icon = <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n\n                if (row.is_selected) {\n                    icon = <i className=\"fa fa-circle\" aria-hidden=\"true\"></i>\n                }\n\n                return (\n                    <tr key={row.id} onClick={() => this.selected(row)}>\n                        <td>{icon}</td>\n                        {this.props.columns.map(col =>\n                            <td key={col.key}>\n                                {row[col.key]}\n                            </td>\n                        )}\n                    </tr>\n                )\n            });\n        }\n\n        let container = (\n            <tr>\n                <td colSpan={this.props.columns.length + 1} className=\"center\">No Records Found.</td>\n            </tr>\n        )\n\n        if (this.state.loading) {\n            container = (\n                <tr>\n                    <td colSpan={this.props.columns.length + 1} className=\"center\">Slow network, Loading...</td>\n                </tr>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                {container}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(this.state.total_pages / this.state.per_page); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let classes = this.state.current_page === number ? 'active' : '';\n\n            if (number == 1 || number == this.state.total_pages || (number >= this.state.current_page - 2 && number <= this.state.current_page + 2)) {\n                return (\n                    <span key={number} className={classes} onClick={() => this.getPaginated(number)}>{number}</span>\n                );\n            }\n        });\n\n        let searchForm;\n\n        if (!this.props.hideSearch) {\n            searchForm = (\n                <SearchForm onChangeHandler={this.handleSearch} />\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <DatatableStyleWrapper className=\"iosDatatableWrapper\">\n                    {searchForm}\n                    <Table \n                        onRow={(record, rowIndex) => {\n                            return {\n                                onClick: event => {this.selected(record)},\n                            };\n                        }}                \n                        columns={this.props.columns} \n                        dataSource={this.state.data} \n                        pagination={false}\n                    />\n                    \n                    {/* <table className={['table', 'table-striped', 'table-hover'].join(' ')}>\n                        <thead>\n                            <tr>\n                            <th></th>\n                            {this.props.columns.map((column, index) => <th key={index}>{column.title}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.tableList()}\n                        </tbody>\n                    </table> */}\n                    <div className=\"pagination\">\n                        <span onClick={() => this.getPaginated(1)}>&laquo;</span>\n                        {renderPageNumbers}\n                        <span onClick={() => this.getPaginated(this.props.last_page)}>&raquo;</span>\n                    </div>\n                </DatatableStyleWrapper>\n            </React.Fragment>\n        );\n    };\n}\n\nDatatable.defaultProps = {\n    hideSearch: false\n}\n\nexport default withRouter(Datatable);","export { default } from './Datatable.component';"],"sourceRoot":""}